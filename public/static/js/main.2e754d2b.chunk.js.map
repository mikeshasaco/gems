{"version":3,"sources":["partials/Footer.js","utils/constant.js","partials/Header.js","partials/nft_compare/CompareResult.js","partials/nft_compare/First_Nft_Search.js","partials/nft_compare/First_Result.js","partials/nft_compare/GraphDuration.js","partials/nft_compare/NftComparisionGraph.js","partials/nft_compare/Second_Nft_Search.js","partials/nft_compare/Second_Result.js","utils/axios.js","utils/Requests.js","pages/CompareNfts.js","pages/ContactUs.js","partials/DotBar.js","partials/MobileNftList.js","partials/NftListItem.js","partials/NftRankGraph.js","pages/Main.js","partials/NoMatch.js","reducers/listNft.js","reducers/trendingNft.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","react_default","a","createElement","Fragment","className","href","target","class","assetUrl","Header","_ref","route","react_router_dom","to","src","alt","width","height","CompareResult","firstSelectedCoinDetail","secondSelectedCoinDetail","_useState","useState","_useState2","Object","slicedToArray","compareResult","setcompareResult","useEffect","stats","secondSelectedCoinDetail_stats_ceiling","ceiling","secondSelectedCoinDetail_stats_average","average","secondSelectedCoinDetail_stats_volume","volume","secondSelectedCoinDetail_stats_totalSales","totalSales","firstSelectedCoinDetail_stats_ceiling","firstSelectedCoinDetail_stats_average","firstSelectedCoinDetail_stats_volume","firstSelectedCoinDetail_stats_totalSales","market_cap_percentage","average_percentage","volume_percentage","totalSales_percentage","title","name","market_cap","Math","abs","toFixed","Infinity","isNaN","First_Nft_Search","firstCoin","setfirstCoin","setfirstSelectedCoin","firstSelectedCoin","firstSearchList","setfirstSearchList","objectWithoutProperties","showfirstlist","setshowfirstlist","tabIndex","onFocus","onBlur","type","id","value","placeholder","onChange","e","autoComplete","style","display","edges","length","map","item","index","key","onClick","address","node","unsafeOpenseaImageUrl","symbol","First_Result","isFirstDeatilLoading","floor","GraphDuration","firstNftGraphDataLoading","secondNftGraphDataLoading","graphDuration","setgraphDuration","hide_option_container","document","getElementById","readOnly","ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","NftComparisionGraph","firstNftGraphData","secondNftGraphData","getOrCreateTooltip","chart","tooltipEl","canvas","parentNode","querySelector","background","borderRadius","color","opacity","pointerEvents","position","transform","transition","table","margin","appendChild","dataset","labels","push","label","data","fill","backgroundColor","borderColor","customData","tooltip","borderWidth","pointRadius","pointHoverRadius","x_axis","datasets","options","plugins","enabled","external","context","body","titleLines","bodyLines","b","lines","tableHead","forEach","tr","th","text","createTextNode","tableBody","i","labelColors","td","innerHTML","fontSize","tableRoot","firstChild","remove","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","left","caretX","top","caretY","font","bodyFont","string","padding","callbacks","dataIndex","scales","y","beginAtZero","index_modern","Second_Nft_Search","secondCoin","setsecondCoin","setsecondSelectedCoin","secondSelectedCoin","secondSearchList","setsecondSearchList","showsecondlist","setshowsecondlist","Second_Result","isSecondDeatilLoading","axios","defaults","headers","common","instance","create","baseURL","requests","all","trending_nft","submit_nft","do_like","check_email_exist","tranding_chart","upcomming_nft","submit_upcomming_nft","get_utilities","filter_nftlists","search_nft","get_nft_detail","get_nft_history","CompareNfts","myclient","_useState3","_useState4","_useState5","_useState6","setfirstSelectedCoinDetail","_useState7","_useState8","_useState9","_useState10","setisFirstDeatilLoading","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","setsecondSelectedCoinDetail","_useState17","_useState18","_useState19","_useState20","setisSecondDeatilLoading","firstCoinTimeout","secondCoinTimeout","_useState21","_useState22","setfirstNftGraphData","_useState23","_useState24","setfirstNftGraphDataLoading","_useState25","_useState26","setsecondNftGraphData","_useState27","_useState28","setsecondNftGraphDataLoading","_useState29","_useState30","nftdeatilCancelSourceFirst","setnftdeatilCancelSourceFirst","_useState31","_useState32","nftdeatilCancelSourceSecond","setnftdeatilCancelSourceSecond","_useState33","_useState34","get_search_data","_ref2","asyncToGenerator","regenerator_default","mark","_callee","param","callback","result","wrap","_context","prev","next","post","then","contracts","catch","error","abrupt","stop","_x","_x2","apply","this","arguments","get_selected_nft_details","loading_callback","callback2","loading_callback2","setCancelToken","cancelTokenSource1","ax","CancelToken","source","cancelTokenSource2","cancelToken","token","duration","response","setTimeout","clearTimeout","console","log","element","cancel","action","method","nft_compare_First_Nft_Search","temp","nft_compare_Second_Nft_Search","nft_compare_First_Result","nft_compare_CompareResult","nft_compare_Second_Result","nft_compare_GraphDuration","nft_compare_NftComparisionGraph","ContactUs","DotBar","liked","JSON","parse","localStorage","getItem","MobileNftList","BarElement","Main","location","useLocation","myRoute","setMyRoute","pathname","partials_Header","react_router","exact","path","pages_ContactUs","pages_CompareNfts","react_toastify_esm","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","partials_Footer","NoMatch","listNft","state","undefined","payload","trendingNft","allReducres","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","pages_Main","partials_NoMatch","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2e754d2b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <div className=\"gemstool-footer\">\r\n                    <div className=\"container-lg\">\r\n                        <div className=\"credits\">\r\n                            <div className=\"copyright\">\r\n                                <span>Copyright 2022 | Gems Tools</span>\r\n                            </div>\r\n                            <div className=\"developed\">\r\n                                <span>Designed and Developed by <a href=\"https://qalbit.com/\" target=\"_blank\"> QalbIT Solution </a> </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            <div className=\"sticky-button\">\r\n                <a href=\"https://mobile.twitter.com/gemstoolsapp\" target={\"_blank\"}>\r\n                    <span className='icon'><i class=\"fab fa-twitter\"></i></span><span>Follow us</span>\r\n                </a>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","\r\nexport const baseUrl = \"https://gems.tools/\";\r\nexport const assetUrl = \"https://gems.tools/\";\r\nexport const serverUrl = \"https://gems.tools/\";\r\nexport const nftAssetUrl = serverUrl+\"storage/images/nftimages/\";\r\n\r\n\r\n\r\nexport const graphql_endpoint = \"https://graphql.icy.tools/graphql\";\r\n\r\n// const client = new ApolloClient({ link: new HttpLink({ uri: '/graphql', fetch })});    \")\r\n\r\n//http://dev.qalbit.com/gemstools/\r\n// -> Local : storage/images/nftimages/\r\n// -> Live: storage/app/public/images/nftimages/\r\n\r\n// Favicon : https://dev.qalbit.com/gemstools/images/favicon.png\r\n/*\r\n    replace {{asset('images')}}/favicon.png in favicon in welcome.blade.php\r\n*/","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { assetUrl } from '../utils/constant';\r\nfunction Header({route}) {\r\n    return (\r\n\r\n        <>\r\n        <header>\r\n            <nav className=\"head-nav\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"brand-logo\">\r\n                            <Link to=\"/\"><img src={assetUrl+\"images/gemstool-logo.png\"} alt=\"NFTs Grades image\" width=\"180px\" height=\"46px\" /></Link>\r\n                        </div>\r\n                        <div className=\"nav-links\">\r\n                            <div className=\"hemburger\">\r\n                                <button >\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"nav-links\">\r\n                                <ul className=\"user-list\">\r\n                                    <li>\r\n                                        {/* <Link to=\"/\" className={(route == '/') ? 'active' : ''}>NFT Grades</Link> */}\r\n                                    </li>\r\n                                    <li>\r\n                                        {/* <Link to=\"/compare-nft\" className={(route == '/compare-nft') ? 'active' : ''}>Dual NFT Charts</Link> */}\r\n                                    </li>\r\n                                    <li>\r\n                                        {/* <Link to=\"/upcomming-nft\" className={(route == '/upcomming-nft') ? 'active' : ''}>Upcoming NFTs</Link> */}\r\n                                    </li>\r\n                                    <li>\r\n                                        {/* <Link to=\"/submit-nft\" className={(route == '/submit-nft') ? 'active' : ''}>Submit NFTs</Link> */}\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/contact-us\" className={(route == '/contact-us') ? 'active' : ''}>Contact us</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mobile-nav\">\r\n                            <ul className=\"mobile-userlist\">\r\n                                <li>\r\n                                    <Link to=\"/\">NFT Grades</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/compare-nft\">Dual NFT Charts</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/submit-nft\">Submit NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/upcomming-nft\">Upcoming NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/contact-us\">Contact us</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CompareResult({ firstSelectedCoinDetail, secondSelectedCoinDetail }) {\r\n  const [compareResult, setcompareResult] = useState(null);\r\n  useEffect(() => {\r\n    if (firstSelectedCoinDetail != null && secondSelectedCoinDetail != null) {\r\n\r\n        if(secondSelectedCoinDetail.stats){\r\n            var secondSelectedCoinDetail_stats_ceiling = secondSelectedCoinDetail.stats.ceiling\r\n            var secondSelectedCoinDetail_stats_average = secondSelectedCoinDetail.stats.average\r\n            var secondSelectedCoinDetail_stats_volume = secondSelectedCoinDetail.stats.volume\r\n            var secondSelectedCoinDetail_stats_totalSales = secondSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            // var market_cap_percentage = 0;\r\n            // var average_percentage = 0;\r\n            // var volume_percentage = 0;\r\n            // var totalSales_percentage = 0;\r\n            var secondSelectedCoinDetail_stats_ceiling = 0;\r\n            var secondSelectedCoinDetail_stats_average = 0;\r\n            var secondSelectedCoinDetail_stats_volume = 0;\r\n            var secondSelectedCoinDetail_stats_totalSales = 0;\r\n        }\r\n\r\n        if(firstSelectedCoinDetail.stats){\r\n            var firstSelectedCoinDetail_stats_ceiling = firstSelectedCoinDetail.stats.ceiling\r\n            var firstSelectedCoinDetail_stats_average = firstSelectedCoinDetail.stats.average\r\n            var firstSelectedCoinDetail_stats_volume = firstSelectedCoinDetail.stats.volume\r\n            var firstSelectedCoinDetail_stats_totalSales = firstSelectedCoinDetail.stats.totalSales\r\n        }\r\n        else{\r\n            var firstSelectedCoinDetail_stats_ceiling = 0\r\n            var firstSelectedCoinDetail_stats_average = 0\r\n            var firstSelectedCoinDetail_stats_volume = 0\r\n            var firstSelectedCoinDetail_stats_totalSales = 0\r\n        }\r\n\r\n        var market_cap_percentage = (secondSelectedCoinDetail_stats_ceiling || 0) > (firstSelectedCoinDetail_stats_ceiling || 0) ? \r\n            ((secondSelectedCoinDetail_stats_ceiling || 0) / (firstSelectedCoinDetail_stats_ceiling || 0)) :\r\n            ((firstSelectedCoinDetail_stats_ceiling || 0) / (secondSelectedCoinDetail_stats_ceiling || 0));\r\n        var average_percentage = (secondSelectedCoinDetail_stats_average || 0) > (firstSelectedCoinDetail_stats_average || 0) ? \r\n            ((secondSelectedCoinDetail_stats_average || 0) / (firstSelectedCoinDetail_stats_average || 0)) :\r\n            ((firstSelectedCoinDetail_stats_average || 0) / (secondSelectedCoinDetail_stats_average || 0));\r\n        var volume_percentage = (secondSelectedCoinDetail_stats_volume || 0) > (firstSelectedCoinDetail_stats_volume || 0) ? \r\n            ((secondSelectedCoinDetail_stats_volume || 0) / (firstSelectedCoinDetail_stats_volume || 0)) :\r\n            ((firstSelectedCoinDetail_stats_volume || 0) / (secondSelectedCoinDetail_stats_volume || 0));\r\n        var totalSales_percentage = (secondSelectedCoinDetail_stats_totalSales || 0) > (firstSelectedCoinDetail_stats_totalSales || 0) ? \r\n            ((secondSelectedCoinDetail_stats_totalSales || 0) / (firstSelectedCoinDetail_stats_totalSales || 0)) :\r\n            ((firstSelectedCoinDetail_stats_totalSales || 0) / (secondSelectedCoinDetail_stats_totalSales || 0));\r\n\r\n      setcompareResult({\r\n        title: [firstSelectedCoinDetail.name, secondSelectedCoinDetail.name],\r\n        market_cap: secondSelectedCoinDetail_stats_ceiling - firstSelectedCoinDetail_stats_ceiling,\r\n        market_cap_percentage: market_cap_percentage,\r\n        average: secondSelectedCoinDetail_stats_average - firstSelectedCoinDetail_stats_average,\r\n        average_percentage: average_percentage,\r\n        volume: secondSelectedCoinDetail_stats_volume - firstSelectedCoinDetail_stats_volume,\r\n        volume_percentage: volume_percentage,\r\n        totalSales: secondSelectedCoinDetail_stats_totalSales - firstSelectedCoinDetail_stats_totalSales,\r\n        totalSales_percentage: totalSales_percentage,\r\n      });\r\n    } else {\r\n      setcompareResult(null);\r\n    }\r\n    return () => {};\r\n  }, [firstSelectedCoinDetail, secondSelectedCoinDetail]);\r\n\r\n  useEffect(() => {\r\n      \r\n  }, [compareResult])\r\n  \r\n//   tubby cats by tubby collective\r\n  return (\r\n    <div className=\"result-box\">\r\n        {\r\n            compareResult != null ? \r\n            <>\r\n                <div className=\"mt-4\">\r\n                    <div className=\"box-wrapper\">\r\n                        <div className=\"header diff-head\">\r\n                        <div className=\"small-heading\">Difference</div>\r\n                        <h3 className=\"heading\">\r\n                            <span className=\"nft-name\">{compareResult.title[0]}</span><span className=\"highlight\">vs</span><span className=\"nft-name\">{compareResult.title[1]}</span>\r\n                        </h3>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                        <div className=\"stats diff-stats\">\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Market Cap</div>\r\n                            <div className=\"number\">\r\n                                {\r\n                                    compareResult.market_cap < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">\r\n                                            {Math.abs(compareResult.market_cap).toFixed(2)}\r\n                                            <small>({ (compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage)) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small>\r\n                                        </span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.market_cap).toFixed(2)} <small>({compareResult.market_cap_percentage == Infinity || isNaN(compareResult.market_cap_percentage) ? '0' : compareResult.market_cap_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item br-none\">\r\n                            <div className=\"title\">Average</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.average < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.average).toFixed(2)} <small>({compareResult.average_percentage == Infinity || isNaN(compareResult.average_percentage) ?  '0' : compareResult.average_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Volume</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.volume < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.volume).toFixed(2)} <small>({compareResult.volume_percentage == Infinity || isNaN(compareResult.volume_percentage) ? '0': compareResult.volume_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                            <div className=\"title\">Sale</div>\r\n                            <div className=\"number\">\r\n                                {compareResult.totalSales < 0 ?\r\n                                    <>\r\n                                        <span className=\"minus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>:\r\n                                    <>\r\n                                        <span className=\"plus-val\">{Math.abs(compareResult.totalSales).toFixed()} <small>({compareResult.totalSales_percentage == Infinity || isNaN(compareResult.totalSales_percentage) ? '0' : compareResult.totalSales_percentage.toFixed(2)})</small></span>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n            :\r\n            <></>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompareResult;\r\n","import React, { useState } from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction First_Nft_Search({\r\n    firstCoin,\r\n    setfirstCoin,\r\n    firstSelectedCoin,\r\n    setfirstSelectedCoin,\r\n    firstSearchList,\r\n    setfirstSearchList, ...prop\r\n}) {\r\n    const [showfirstlist, setshowfirstlist] = useState(false);\r\n  return (\r\n    <div className=\"form-group nft-search-container\"\r\n        \r\n    >\r\n      <label>Select A</label>\r\n      <div  tabIndex={1} \r\n        onFocus={()=>{\r\n          setshowfirstlist(true)\r\n        }}\r\n        onBlur={()=>{\r\n            setshowfirstlist(false)\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_a\"\r\n          id=\"select_a\"\r\n          value={firstCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setfirstCoin(null);\r\n            } else {\r\n              setfirstCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n        <div className=\"nft-search-result-container first\" style={{ display: (firstSearchList == null || !showfirstlist) ? \"none\" : \"block\" }}>\r\n          { firstSearchList != null ? (\r\n            <>\r\n              {firstSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">\r\n                        Loading...\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    \r\n                  {\r\n                    firstSearchList.edges.length > 0 ? <>\r\n                      {firstSearchList.edges.map((item, index) => {\r\n                        return (\r\n                          <li key={index} onClick={(e)=>{\r\n                            setfirstSelectedCoin({\r\n                                address: item.node.address\r\n                            })\r\n                            setshowfirstlist(false)\r\n                            setfirstCoin(item.node.name);\r\n\r\n                          }}>\r\n                            <span className=\"detail\">\r\n                              <span className=\"image\"><img src={item.node.unsafeOpenseaImageUrl || (assetUrl + \"images/user-dp.png\")} alt={item.node.name} /></span>\r\n                              <span>{item.node.name}</span> <span className=\"code\">{item.node.symbol}</span>\r\n                            </span>\r\n                            \r\n                          </li>\r\n                          \r\n                        );\r\n                      })}\r\n                    </> :\r\n                    <>\r\n                      <li>\r\n                        <div className=\"detail\">No record found.</div>\r\n                      </li>\r\n                    </>\r\n                  }\r\n                    \r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction First_Result({firstSelectedCoinDetail,isFirstDeatilLoading}) {\r\n\r\n    if(isFirstDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    }\r\n    if(firstSelectedCoinDetail == null || firstSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        );   \r\n    }\r\n  return (\r\n    <div className=\"result-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {firstSelectedCoinDetail && firstSelectedCoinDetail.unsafeOpenseaImageUrl  ? (\r\n                <>\r\n                  <img src={firstSelectedCoinDetail.unsafeOpenseaImageUrl} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats ? firstSelectedCoinDetail.stats.floor.toFixed(2) : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {firstSelectedCoinDetail && firstSelectedCoinDetail.stats\r\n                    ? firstSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default First_Result;\r\n","import React, { useEffect } from 'react'\r\n\r\nconst GraphDuration = ({\r\n    firstNftGraphDataLoading,\r\n    secondNftGraphDataLoading,\r\n    graphDuration,\r\n    setgraphDuration\r\n}) => {\r\n    const graphDurationChangeHandler = (e) => {\r\n        setgraphDuration(e.target.value)\r\n    }\r\n    const show_option_container = (e) => {\r\n        document.getElementById('option-container').style.display = 'block';\r\n    }\r\n    const hide_option_container = (e) => {\r\n        document.getElementById('option-container').style.display = 'none';\r\n    }\r\n\r\n    useEffect(() => {\r\n        hide_option_container();\r\n    }, [graphDuration])\r\n    \r\n\r\n  return (\r\n    <div className='graph-duration-container'>\r\n        {/* <button \r\n            className={graphDuration == \"hourly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('hourly')\r\n            }}>Hourly</button>\r\n        <button \r\n            className={graphDuration == \"weekly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('weekly')\r\n            }}>Weekly</button>\r\n        <button \r\n            className={graphDuration == \"monthly\" ? 'active' : ''}\r\n            onClick={()=>{\r\n                setgraphDuration('monthly')\r\n            }}>Monthly</button> */}\r\n\r\n        {/* <select name=\"\" id=\"\" \r\n            defaultValue={'hourly'} \r\n            value={graphDuration}\r\n            onChange={graphDurationChangeHandler}\r\n        >\r\n            <option value=\"Hourly\">Hourly</option>\r\n            <option value=\"Weekly\">Weekly</option>\r\n            <option value=\"Monthly\">Monthly</option>\r\n        </select> */}\r\n        <div className='graph-duration-content'>\r\n            <span className='title'>History: </span>\r\n            <span tabIndex={9998}\r\n                className=\"graph-duration-wrapper\"\r\n                onFocus={()=>{\r\n                    show_option_container()\r\n                }}\r\n                onBlur={()=>{\r\n                    hide_option_container()\r\n                }}\r\n            >\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"\" \r\n                    id=\"\" \r\n                    readOnly \r\n                    placeholder='Select'\r\n                    value={graphDuration}\r\n                    \r\n                />\r\n                <div id='option-container'>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Hourly');hide_option_container()}}>Hourly</span>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Week');hide_option_container()}}>Week</span>\r\n                    <span className='option' onClick={()=>{setgraphDuration('Month');hide_option_container()}}>Month</span>\r\n                </div>\r\n\r\n            </span>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GraphDuration","import { CategoryScale, Chart as ChartJS, LinearScale, LineElement, PointElement, Title, Tooltip } from \"chart.js\";\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip);\r\n\r\nfunction NftComparisionGraph({\r\n  firstNftGraphData,\r\n  secondNftGraphData,\r\n  firstNftGraphDataLoading,\r\n  secondNftGraphDataLoading,\r\n  firstSelectedCoinDetail,\r\n  secondSelectedCoinDetail,\r\n}) {\r\n  if (firstNftGraphDataLoading || secondNftGraphDataLoading) {\r\n    return (\r\n      <>\r\n        <div className=\"std-loading-design\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  // ------------------------------\r\n\r\n  // tooltip custom function\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const { chart, tooltip } = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n\r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n\r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map((b) => b.lines);\r\n\r\n      const tableHead = document.createElement(\"thead\");\r\n\r\n      titleLines.forEach((title) => {\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.borderWidth = 0;\r\n\r\n        const th = document.createElement(\"th\");\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n\r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n\r\n      const tableBody = document.createElement(\"tbody\");\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n\r\n        const tr = document.createElement(\"tr\");\r\n        tr.style.backgroundColor = \"inherit\";\r\n        tr.style.borderWidth = 0;\r\n\r\n        const td = document.createElement(\"td\");\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement(\"div\");\r\n        text.innerHTML = body.length > 0 ? body[0] : '';\r\n        td.style.fontSize = \"11px\";\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n\r\n      const tableRoot = tooltipEl.querySelector(\"table\");\r\n\r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n\r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n\r\n    const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\r\n\r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + \"px\";\r\n    tooltipEl.style.top = positionY + tooltip.caretY + \"px\";\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + \"px \" + tooltip.options.padding + \"px\";\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector(\"div\");\r\n\r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement(\"div\");\r\n      tooltipEl.style.background = \"rgba(0, 0, 0, 0.7)\";\r\n      tooltipEl.style.borderRadius = \"3px\";\r\n      tooltipEl.style.color = \"white\";\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = \"none\";\r\n      tooltipEl.style.position = \"absolute\";\r\n      tooltipEl.style.transform = \"translate(-50%, 0)\";\r\n      tooltipEl.style.transition = \"all .1s ease\";\r\n\r\n      const table = document.createElement(\"table\");\r\n      table.style.margin = \"0px\";\r\n      table.style.width = \"100px\";\r\n\r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n\r\n    return tooltipEl;\r\n  };\r\n  // ----------------------\r\n\r\n  let dataset = [];\r\n  var labels = null;\r\n  if (secondNftGraphData) {\r\n    dataset.push({\r\n      label: secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : null,\r\n      data: secondNftGraphData && secondNftGraphData.average ? secondNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"#00FF00\",\r\n      borderColor: \"#00FF00\",\r\n      customData: secondNftGraphData.tooltip,\r\n      borderWidth: 2,\r\n      pointRadius: 2,\r\n      pointHoverRadius: 5\r\n    });\r\n    labels = secondNftGraphData.x_axis;\r\n  }\r\n  if (firstNftGraphData) {\r\n    dataset.push({\r\n      label: firstSelectedCoinDetail && firstSelectedCoinDetail.name ? firstSelectedCoinDetail.name : null,\r\n      data: firstNftGraphData && firstNftGraphData.average ? firstNftGraphData.average : null,\r\n      fill: true,\r\n      backgroundColor: \"#FF0000\",\r\n      borderColor: \"#FF0000\",\r\n      customData: firstNftGraphData.tooltip,\r\n      borderWidth: 2,\r\n      pointRadius: 2,\r\n      pointHoverRadius: 5\r\n    });\r\n    labels = firstNftGraphData && firstNftGraphData.x_axis ? firstNftGraphData.x_axis : null;\r\n  }\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: dataset,\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      tooltip: {\r\n        enabled: false,\r\n        position: \"nearest\",\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NftComparisionGraph;\r\n","import React, { useState } from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction Second_Nft_Search({\r\n  secondCoin,\r\n  setsecondCoin,\r\n  secondSelectedCoin,\r\n  setsecondSelectedCoin,\r\n  secondSearchList,\r\n  setsecondSearchList,\r\n  ...prop\r\n}) {\r\n  const [showsecondlist, setshowsecondlist] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className=\"form-group nft-search-container\"\r\n    >\r\n      <label>Select B</label>\r\n\r\n      <div\r\n        tabIndex={1}\r\n        onFocus={() => {\r\n          setshowsecondlist(true);\r\n        }}\r\n        onBlur={() => {\r\n          setshowsecondlist(false);\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"select_b\"\r\n          id=\"select_b\"\r\n          value={secondCoin}\r\n          className=\"form-control\"\r\n          placeholder=\"Eg. Etherneum\"\r\n          onChange={(e) => {\r\n            if (e.target.value == \"\") {\r\n              setsecondCoin(null);\r\n            } else {\r\n              setsecondCoin(e.target.value);\r\n            }\r\n          }}\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <div\r\n          className=\"nft-search-result-container second\"\r\n          style={{ display: secondSearchList == null || !showsecondlist ? \"none\" : \"block\" }}\r\n        >\r\n          {secondSearchList != null ? (\r\n            <>\r\n              {secondSearchList == \"loading\" ? (\r\n                <>\r\n                  <ul>\r\n                    <li>\r\n                      <div className=\"text-center\">Loading...</div>\r\n                    </li>\r\n                  </ul>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <ul>\r\n                    {secondSearchList.edges.length > 0 ? (\r\n                      <>\r\n                        {secondSearchList.edges.map((item, index) => {\r\n                          return (\r\n                            <li\r\n                              key={index}\r\n                              onClick={(e) => {\r\n                                setsecondSelectedCoin({\r\n                                  address: item.node.address,\r\n                                });\r\n                                setshowsecondlist(false);\r\n                                setsecondCoin(item.node.name);\r\n                              }}\r\n                            >\r\n                              <span className=\"detail\">\r\n                                <span className=\"image\"><img src={item.node.unsafeOpenseaImageUrl || (assetUrl + \"images/user-dp.png\")} alt={item.node.name} /></span>\r\n                                <span>{item.node.name}</span> <span className=\"code\">{item.node.symbol}</span>\r\n                              </span>\r\n                            </li>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <li>\r\n                          <div className=\"detail\">No record found.</div>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Nft_Search;\r\n","import React from \"react\";\r\nimport { assetUrl } from \"../../utils/constant\";\r\n\r\nfunction Second_Result({secondSelectedCoinDetail,isSecondDeatilLoading}) {\r\n\r\n    if(isSecondDeatilLoading == true){\r\n        return <div className=\"result-box\">\r\n          <div className=\"mt-4\">\r\n            <div className=\"box-wrapper bg-transparent\">\r\n                <div className=\"nftdetail-loading\">\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n    }\r\n    if(secondSelectedCoinDetail == null || secondSelectedCoinDetail == ''){\r\n        return (\r\n            <div className=\"result-box\"></div>\r\n        ); \r\n    }\r\n  return (\r\n    <div className=\"result-box last-box\">\r\n      <div className=\"mt-4\">\r\n        <div className=\"box-wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"image\">\r\n              {secondSelectedCoinDetail && secondSelectedCoinDetail.unsafeOpenseaImageUrl ? (\r\n                <>\r\n                  <img src={secondSelectedCoinDetail.unsafeOpenseaImageUrl} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <img src={assetUrl + \"images/user-dp.png\"} alt=\"User image\" height=\"62\" width=\"62\" />\r\n                </>\r\n              )}\r\n            </div>\r\n            <h3>{secondSelectedCoinDetail && secondSelectedCoinDetail.name ? secondSelectedCoinDetail.name : \"NaN\"}</h3>\r\n          </div>\r\n          <div className=\"body\">\r\n            <div className=\"stats\">\r\n              <div className=\"item\">\r\n                <div className=\"title\">Market Cap</div>\r\n                <div className=\"number\"> -\r\n                  {/* {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.ceiling.toFixed(2)\r\n                    : \"0\"} */}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Volume</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.volume.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item br-none\">\r\n                <div className=\"title\">Average</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.average.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Floor</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.floor.toFixed(2)\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"title\">Sale</div>\r\n                <div className=\"number\">\r\n                  {secondSelectedCoinDetail && secondSelectedCoinDetail.stats\r\n                    ? secondSelectedCoinDetail.stats.totalSales\r\n                    : \"0\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"item\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Second_Result;\r\n","import axios from \"axios\";\r\n// http://192.168.1.7:8000\r\n// http://dev.qalbit.com/gemstools\r\n// https://gems.tools\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\nconst instance = axios.create({\r\n    baseURL: \"https://gems.tools\"\r\n});\r\n\r\nexport default instance","const requests = {\r\n    all: `/api/nftlists`,\r\n    trending_nft : `/api/trendingnft`,\r\n    submit_nft: `/api/submit-nft`,\r\n    do_like: `/api/do-like`,\r\n    check_email_exist: `/api/checkemail`,\r\n    tranding_chart: `/api/graphdata`,\r\n    upcomming_nft: `/api/upcomingnft`,\r\n    submit_upcomming_nft: `/api/add-upcoming-nft`,\r\n    get_utilities: `/api/utilities`,\r\n    filter_nftlists: `/api/filter_nftlists`,\r\n    search_nft: `/api/search-nft`,\r\n    get_nft_detail: `/api/get-nft-detail`,\r\n    get_nft_history: `/api/get-nft-history`,\r\n}\r\nexport default requests;","import ax from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport CompareResult from '../partials/nft_compare/CompareResult';\r\nimport First_Nft_Search from '../partials/nft_compare/First_Nft_Search';\r\nimport First_Result from '../partials/nft_compare/First_Result';\r\nimport GraphDuration from '../partials/nft_compare/GraphDuration';\r\nimport NftComparisionGraph from '../partials/nft_compare/NftComparisionGraph';\r\nimport Second_Nft_Search from '../partials/nft_compare/Second_Nft_Search';\r\nimport Second_Result from '../partials/nft_compare/Second_Result';\r\nimport axios from \"../utils/axios\";\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from '../utils/Requests';\r\n\r\nfunction CompareNfts({myclient}) {\r\n  const [firstCoin, setfirstCoin] = useState(null)\r\n  const [firstSelectedCoin, setfirstSelectedCoin] = useState(null)\r\n  const [firstSelectedCoinDetail, setfirstSelectedCoinDetail] = useState(null)\r\n  const [firstSearchList, setfirstSearchList] = useState(null)\r\n  const [isFirstDeatilLoading, setisFirstDeatilLoading] = useState(false)\r\n  \r\n  const [secondCoin, setsecondCoin] = useState(null)\r\n  const [secondSelectedCoin, setsecondSelectedCoin] = useState(null)\r\n  const [secondSelectedCoinDetail, setsecondSelectedCoinDetail] = useState(null)\r\n  const [secondSearchList, setsecondSearchList] = useState(null)\r\n  const [isSecondDeatilLoading, setisSecondDeatilLoading] = useState(false)\r\n  let firstCoinTimeout = null;\r\n  let secondCoinTimeout = null;\r\n\r\n\r\n  const [firstNftGraphData, setfirstNftGraphData] = useState(null)\r\n  const [firstNftGraphDataLoading, setfirstNftGraphDataLoading] = useState(false)\r\n\r\n  const [secondNftGraphData, setsecondNftGraphData] = useState(null)\r\n  const [secondNftGraphDataLoading, setsecondNftGraphDataLoading] = useState(false)\r\n  const [nftdeatilCancelSourceFirst, setnftdeatilCancelSourceFirst] = useState(null)\r\n  const [nftdeatilCancelSourceSecond, setnftdeatilCancelSourceSecond] = useState(null)\r\n\r\n  const [graphDuration, setgraphDuration] = useState('Week')\r\n\r\n  // https://graphql.icy.tools/graphql\r\n  \r\n  const searchByName = (e) => {\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  // swip the Nft search box\r\n  const swapCoin = () => {\r\n    // setisFirstDeatilLoading(true)\r\n    // setisSecondDeatilLoading(true)\r\n\r\n    let temp = firstCoin == null ? '' : firstCoin;\r\n    setfirstCoin(secondCoin == null ? '' : secondCoin)\r\n    setsecondCoin(temp)\r\n\r\n    setsecondSelectedCoinDetail(null)\r\n    setfirstSelectedCoinDetail(null)\r\n    \r\n    temp = firstSelectedCoin == null ? '' : firstSelectedCoin;\r\n    setfirstSelectedCoin(secondSelectedCoin == null ? '' : secondSelectedCoin);\r\n    setsecondSelectedCoin(temp);\r\n    \r\n    setsecondNftGraphData(null)\r\n    setfirstNftGraphData(null)\r\n\r\n  }\r\n  \r\n  // get seatch data and store in state\r\n  const get_search_data = async (param, callback) => {\r\n    var result = null\r\n    await axios.post(requests.search_nft, {\r\n        name : param\r\n      }).then((result) => {\r\n        callback(result.data.data.data.contracts)\r\n      })\r\n      .catch((error)=>{\r\n        setfirstSearchList(null)\r\n      });\r\n    return result\r\n  }\r\n  \r\n  // get selected nft detail\r\n  const get_selected_nft_details = (address, callback, loading_callback, callback2, loading_callback2, setCancelToken) => {\r\n    let cancelTokenSource1 = ax.CancelToken.source();\r\n    let cancelTokenSource2 = ax.CancelToken.source();\r\n    axios.post(requests.get_nft_detail, {\r\n      address : address.address\r\n      }, {\r\n        cancelToken: cancelTokenSource1.token\r\n      }).then((result) => {\r\n        loading_callback(false)\r\n        callback(result.data.data)\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback(false)\r\n      });\r\n\r\n    loading_callback2(true);\r\n    axios.post(requests.get_nft_history, {\r\n      address : address.address,\r\n      duration: graphDuration\r\n      }, {\r\n        cancelToken: cancelTokenSource2.token\r\n      }).then(response => response.data)\r\n      .then((result) => {\r\n        callback2({\r\n          average: result.data.average,\r\n          x_axis: result.data.x_axis,\r\n          tooltip: result.data.tooltip,\r\n        });        // callback2(result.data.data)\r\n        loading_callback2(false);\r\n      })\r\n      .catch((error)=>{\r\n        loading_callback2(false);\r\n      });\r\n\r\n      setCancelToken([cancelTokenSource1, cancelTokenSource2]);\r\n\r\n  }\r\n  \r\n  // On first coin change\r\n  useEffect(() => {\r\n    if(firstCoin == null || firstCoin == ''){\r\n      setfirstSearchList(null)\r\n    }\r\n    else{\r\n      setfirstSearchList('loading')\r\n      firstCoinTimeout = setTimeout(() => {\r\n        get_search_data(firstCoin, setfirstSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(firstCoinTimeout)\r\n    }\r\n  }, [firstCoin])\r\n\r\n  // On second coin change\r\n  useEffect(() => {\r\n    if(secondCoin == null || secondCoin == ''){\r\n      setsecondSearchList(null)\r\n    }\r\n    else{\r\n      setsecondSearchList('loading')\r\n      secondCoinTimeout = setTimeout(() => {\r\n        get_search_data(secondCoin, setsecondSearchList);\r\n      }, 500);\r\n    }\r\n    \r\n    return () => {\r\n      clearTimeout(secondCoinTimeout)\r\n    }\r\n  }, [secondCoin])\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log(secondSelectedCoin, firstSelectedCoin);\r\n    if(firstSelectedCoin){\r\n      setfirstNftGraphDataLoading(true)\r\n      axios.post(requests.get_nft_history, {\r\n        address : firstSelectedCoin.address,\r\n        duration: graphDuration\r\n        }).then(response => response.data)\r\n        .then((result) => {\r\n          setfirstNftGraphData({\r\n            average: result.data.average,\r\n            x_axis: result.data.x_axis,\r\n            tooltip: result.data.tooltip,\r\n          });        // callback2(result.data.data)\r\n          setfirstNftGraphDataLoading(false);\r\n        })\r\n        .catch((error)=>{\r\n          setfirstNftGraphDataLoading(false);\r\n        });\r\n    }\r\n\r\n    if(secondSelectedCoin){\r\n      setsecondNftGraphDataLoading(true)\r\n      axios.post(requests.get_nft_history, {\r\n        address : secondSelectedCoin.address,\r\n        duration: graphDuration\r\n        }).then(response => response.data)\r\n        .then((result) => {\r\n          setsecondNftGraphData({\r\n            average: result.data.average,\r\n            x_axis: result.data.x_axis,\r\n            tooltip: result.data.tooltip,\r\n          });        // callback2(result.data.data)\r\n          setsecondNftGraphDataLoading(false);\r\n        })\r\n        .catch((error)=>{\r\n          setsecondNftGraphDataLoading(false);\r\n        });\r\n    }\r\n  }, [graphDuration])\r\n\r\n  useEffect(() => {\r\n    if(firstSelectedCoin != null && firstSelectedCoin != ''){\r\n      setisFirstDeatilLoading(true);\r\n      get_selected_nft_details(\r\n        firstSelectedCoin, \r\n        setfirstSelectedCoinDetail, \r\n        setisFirstDeatilLoading, \r\n        setfirstNftGraphData, \r\n        setfirstNftGraphDataLoading, \r\n        setnftdeatilCancelSourceFirst\r\n      )\r\n    }\r\n    else{\r\n      setfirstSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      if(firstSelectedCoin != null && firstSelectedCoin != ''){\r\n        if(nftdeatilCancelSourceFirst){\r\n          nftdeatilCancelSourceFirst.forEach(element => {\r\n            element.cancel('manually');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [firstSelectedCoin])\r\n  \r\n  useEffect(() => {\r\n    // console.log(secondSelectedCoin);\r\n  }, [firstSearchList])\r\n\r\n  useEffect(() => {\r\n    if(secondSelectedCoin != null && secondSelectedCoin != ''){\r\n      setisSecondDeatilLoading(true);\r\n      get_selected_nft_details(\r\n        secondSelectedCoin,\r\n        setsecondSelectedCoinDetail,\r\n        setisSecondDeatilLoading,\r\n        setsecondNftGraphData,\r\n        setsecondNftGraphDataLoading,\r\n        setnftdeatilCancelSourceSecond\r\n      )\r\n    }\r\n    else{\r\n      setsecondSelectedCoin(null);\r\n    }\r\n    return () => {\r\n      if(secondSelectedCoin != null && secondSelectedCoin != ''){\r\n        if(nftdeatilCancelSourceSecond){\r\n          nftdeatilCancelSourceSecond.forEach(element => {\r\n            element.cancel('manually');\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [secondSelectedCoin])\r\n  \r\n  \r\n\r\n\r\n\r\n  return (\r\n    \r\n    <main className=\"main-spacing\">\r\n    {/*  Submit NFTs form start  */}\r\n    <section className=\"compare-nft\">\r\n        <div className=\"nft-container\">\r\n            <div className=\"container-lg\">\r\n                <div className=\"row m-0\">\r\n                  <div className=\"col-12\">\r\n                    <h1 className=\"h1-heading\">\r\n                      <span><span className=\"highlight\">NFT</span> Analytics Charts</span>\r\n                    </h1>\r\n                  </div>\r\n                    <div className=\"col-12 heading\">\r\n                        <h1> <span className=\"highlight\">Compare</span> NFTs </h1>\r\n                    </div>\r\n                    <div className=\"col-lg-9 left-block\">\r\n                        <div className=\"compare-nft-form\">\r\n                          <form action=\"\" method=\"post\" id=\"compare-nft-form\">\r\n                            <div className=\"box-modal\">\r\n                              <div className=\"select-group\">\r\n\r\n    \r\n                              <First_Nft_Search\r\n                                firstCoin={firstCoin}\r\n                                setfirstCoin={setfirstCoin}\r\n                                firstSelectedCoin={firstSelectedCoin}\r\n                                setfirstSelectedCoin={setfirstSelectedCoin}\r\n                                firstSearchList={firstSearchList}\r\n                                setfirstSearchList={setfirstSearchList}\r\n                              />\r\n                                \r\n                                <div className=\"compare-sign\">\r\n                                  <button className='compare-btn' type='button' onClick={swapCoin}>\r\n                                    <img src={assetUrl+\"images/compare-icon.png\"} alt=\"Compare icon\" />\r\n                                  </button>\r\n                                </div>\r\n\r\n                                <Second_Nft_Search\r\n                                  secondCoin={secondCoin}\r\n                                  setsecondCoin={setsecondCoin}\r\n                                  secondSelectedCoin={secondSelectedCoin}\r\n                                  setsecondSelectedCoin={setsecondSelectedCoin}\r\n                                  secondSearchList={secondSearchList}\r\n                                  setsecondSearchList={setsecondSearchList}\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"diff-result\">\r\n                                <div className=\"result-containers\">\r\n\r\n                                  <First_Result \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    isFirstDeatilLoading={isFirstDeatilLoading}\r\n                                    />\r\n                                  \r\n                                  <CompareResult \r\n                                    firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                  />\r\n\r\n                                  <Second_Result \r\n                                    secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                                    isSecondDeatilLoading={isSecondDeatilLoading}\r\n                                  />\r\n\r\n                                  \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </form>\r\n                        </div>\r\n\r\n                        <div className=\"comparison-graph\">\r\n                          <GraphDuration \r\n                            firstNftGraphDataLoading={firstNftGraphDataLoading}\r\n                            secondNftGraphDataLoading={secondNftGraphDataLoading}\r\n                            graphDuration={graphDuration}\r\n                            setgraphDuration={setgraphDuration}\r\n                          />\r\n                          <div className=\"box-modal\">\r\n                            <div className=\"graph-wrapper\">\r\n                              <NftComparisionGraph \r\n                                firstNftGraphData={firstNftGraphData}\r\n                                secondNftGraphData={secondNftGraphData}\r\n                                firstNftGraphDataLoading={firstNftGraphDataLoading}\r\n                                secondNftGraphDataLoading={secondNftGraphDataLoading}\r\n                                firstSelectedCoinDetail={firstSelectedCoinDetail}\r\n                                secondSelectedCoinDetail={secondSelectedCoinDetail}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-3 right-block mt-lg-0 mt-5\">\r\n                        <div className=\"image\">\r\n                            <img src={assetUrl+\"images/img3.png\"} alt=\"dummy image\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    {/*  Submit NFTs form end  */}\r\n\r\n</main>\r\n  )\r\n}\r\n\r\nexport default CompareNfts","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ContactUs() {\r\n    return (\r\n        <main className=\"main-spacing\">\r\n            <section>\r\n                <div className='container-lg'>\r\n                    <h4 className='highlight bold-14 mb-3'>If you have any questions or concerns about your NFT, we offer 24 hour around the clock assistance, you can email or dm us on Twitter!</h4>\r\n                    <div className=\"twitter-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Twitter </span>: <span>GemsToolsNFT</span> </div>\r\n                    </div>\r\n                    <div className=\"mail-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Email </span>: <a href='mailto:gemstoolsnft@gmail.com' className='text-white'> gemstoolsnft@gmail.com </a> </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContactUs\r\n","import React from 'react';\r\n\r\nfunction DotBar({bars}) {\r\n    var color = 'grey';\r\n    var item_fill = 0;\r\n    if(bars > 0 && bars <= 3){\r\n        color = 'red'\r\n        item_fill = 1\r\n    }\r\n    else if(bars > 3 && bars  <= 7){\r\n        color = 'yellow'\r\n        item_fill = 3\r\n    }\r\n    else if(bars > 7 && bars <= 10){\r\n        color = 'green'\r\n        item_fill = 5\r\n    }\r\n  return (\r\n    <div className=\"dot-container\">\r\n        {[1,2,3,4,5].map(function(item, index){\r\n            if(index < item_fill){\r\n                return <span key={index} className={color+ \" dot\"}></span>\r\n            }\r\n            else{\r\n                return <span key={index} className=\"std dot\"></span>\r\n            }\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DotBar","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\n\r\nfunction MobileNftList({data, ...props}) { \r\n  \r\n  const addLike = (id, totalLike) => {\r\n    console.log(id, totalLike);\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  let nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-5 nft-info-col\">\r\n            <div className=\"nft-info\">\r\n              <div className=\"image\">\r\n                <a>\r\n                  <img src={nftAssetUrl+nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"nft-title\">\r\n                <h2 className=\"highlight\">{data.nft_name}</h2>\r\n              </div>\r\n              <div className=\"nft-user\">\r\n                <h3 className=\"peak\">{data.fname}</h3>\r\n              </div>\r\n              <div className=\"nft-redirect-btn\">\r\n                <a href={data.nft_link} target={\"_blank\"}>\r\n                  <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a className=\"highlight imp bold-14 mt-2\" onClick={\r\n                  (e)=>{\r\n                    e.preventDefault();\r\n                    if(e.target.innerHTML == \"Read more\"){\r\n                      $(\".more-detail\"+data.id).slideDown('fast');\r\n                      e.target.innerHTML = \"Read less\";\r\n                    }\r\n                    else{\r\n                      $(\".more-detail\"+data.id).slideUp('fast');\r\n                      e.target.innerHTML = \"Read more\";\r\n                    }\r\n                  }\r\n                }>Read more</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-7 nft-stat-col\">\r\n          <div className=\"action-btns\">\r\n              <div className=\"mb-2 mobile-like-container\">\r\n                <button className=\"total_liks_count\">\r\n                  <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                </button>\r\n                {\r\n                  liked.includes(data.id) ? <>\r\n                    <button className=\"action liked\">\r\n                      <span>\r\n                      Liked&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </> : <>\r\n                    <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                      <span>\r\n                        Like&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>% NFTs Sold</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Social media</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.community)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Design</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.originality)}</span>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className=\"col-12 mt-2\">\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\"></div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Growth Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.growth_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Resell Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.resell_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Potential Blue Chip</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <div className=\"potential-blue-chip-graph\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Average</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n              <div className={\"mobile-more-detail more-detail\"+data.id} style={{display:'none'}}>\r\n                <div className=\"social-media my-2\">\r\n                  <span className=\"highlight\">Social media: </span>\r\n                  <span>\r\n                    {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                    {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                  </span>\r\n                </div>  \r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"50px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileNftList;\r\n","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\nfunction NftListItem({ data, uniquekey, ...props }) {\r\n  \r\n  const addLike = (id, totalLike) => {\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  var nft_images = JSON.parse(data.image);\r\n\r\n  return (\r\n      <>\r\n          <tr key={uuidv4()} className='border-0'>\r\n            <td>\r\n              <div className=\"nft-detail\">\r\n                <div className=\"image\">\r\n\r\n                  {\r\n                    (nft_images && nft_images.length) > 0 ? <>\r\n                        <a href={nftAssetUrl+nft_images[0]} target={\"_blank\"}>\r\n                            <img src={nftAssetUrl+nft_images[0]} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                        </a>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    </>\r\n                  }\r\n\r\n                  {/* {\r\n                    data.image && <>\r\n                      {\r\n                        nft_images.map((item, index)=>{\r\n                          return <>\r\n                              <a href={nftAssetUrl+item} target={\"_blank\"}>\r\n                                  <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                              </a>\r\n                            </>\r\n                        })\r\n                      }\r\n                    </>\r\n                  } */}\r\n                </div>\r\n                <div className=\"nft-content\">\r\n                    <div className=\"nft-name\">\r\n                        <span>{data.nft_name}</span>\r\n                    </div>\r\n                    {/* <div className=\"nft-user-name\">\r\n                        <span>{data.fname}</span>\r\n                    </div> */}\r\n                    <div className=\"nft-detail-btn\">\r\n                        <a href={data.nft_link} target={'_blank'}>\r\n                            <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <a onClick={\r\n                          (e)=>{\r\n                            e.preventDefault();\r\n                            if(e.target.innerHTML == \"Read more\"){\r\n                              $(\".more-detail\"+data.id).slideDown('fast');\r\n                              e.target.innerHTML = \"Read less\";\r\n                            }\r\n                            else{\r\n                              $(\".more-detail\"+data.id).slideUp('fast');\r\n                              e.target.innerHTML = \"Read more\";\r\n                            }\r\n                          }\r\n                        } className=\"highlight imp bold-14 mt-2\">Read more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            </td>\r\n            <td>{data.utility}</td>\r\n            <td>\r\n              <div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">% NFTs Sold</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Social media</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.community)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Design</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.originality)}</span>\r\n                </div> \r\n\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Growth Evaluation</span>\r\n                  <span className=\"color-orange\">{data.growth_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Resell Evaluation</span>\r\n                  <span className=\"color-orange\">{data.resell_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <div className=\"text-left\">Potential Blue Chip </div>\r\n                  <div className=\"potential-blue-chip-graph text-left\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>            \r\n              </div>\r\n            </td>\r\n            <td>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</td>\r\n            <td>\r\n                <div className=\"action-btns\">\r\n                  <div>\r\n                    <button className=\"total_liks_count\">\r\n                      <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                    </button>\r\n                    {\r\n                      liked.includes(data.id) ? <>\r\n                        <button className=\"action liked\">\r\n                          <span>\r\n                          Liked&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </> : <>\r\n                        <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                          <span>\r\n                            Like&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n          <tr key={uuidv4()} className=\"text-left\">\r\n            <td colSpan={6} className=\"p-0\">\r\n              <div className={\"more-detail\"+data.id} style={{display: 'none'}}>\r\n\r\n                {\r\n                  (data.twitter_link || data.discord_link) ? <>\r\n                    <div className='social-media mb-2'>\r\n                        <span className='highlight'>Social media: </span> \r\n                        <span>\r\n                          {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                          {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                        </span>\r\n                    </div>\r\n                  </>\r\n                  :<>\r\n                  </>\r\n                }\r\n                <div className='other-detail'>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </td>     \r\n          </tr>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default NftListItem;\r\n","import {\r\n  BarElement, CategoryScale, Chart as ChartJS, LinearScale, Title,\r\n  Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n);\r\n\r\n\r\n\r\nfunction NftRankGraph({graphData, ...props}) {\r\n  const labels = graphData.months;\r\n  const dataset = [];\r\n  graphData.data.likes.forEach((element, index) => {\r\n    dataset.push({\r\n      label: graphData.months[index],\r\n      data: element,\r\n      customData: graphData.data.tooltip[index],\r\n      backgroundColor: \"rgb(255, 255, 255)\",\r\n      hoverBackgroundColor: \"rgb(245 222 179)\",\r\n      stack: graphData.months[index],\r\n    })\r\n  });\r\n  \r\n  const data = {\r\n    labels,\r\n    datasets: dataset\r\n  };\r\n\r\n  // [\r\n  //   {\r\n  //     label: \"Dataset 1\",\r\n  //     data: [2, 5, 6],\r\n  //     customData: ['hello', 'how', 'are'],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 0\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 2\",\r\n  //     data: [9, 8, 3],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 1\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 3\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 3\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 4\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 4\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 5\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 5\",\r\n  //   },\r\n  // ]\r\n\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const {chart, tooltip} = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n  \r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n  \r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map(b => b.lines);\r\n  \r\n      const tableHead = document.createElement('thead');\r\n  \r\n      titleLines.forEach(title => {\r\n        const tr = document.createElement('tr');\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const th = document.createElement('th');\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n  \r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n  \r\n      const tableBody = document.createElement('tbody');\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n  \r\n        // const span = document.createElement('span');\r\n        // span.style.background = colors.backgroundColor;\r\n        // span.style.borderColor = colors.borderColor;\r\n        // span.style.borderWidth = '2px';\r\n        // span.style.marginRight = '10px';\r\n        // span.style.height = '10px';\r\n        // span.style.width = '10px';\r\n        // span.style.display = 'inline-block';\r\n  \r\n        const tr = document.createElement('tr');\r\n        tr.style.backgroundColor = 'inherit';\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const td = document.createElement('td');\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement('div');\r\n        text.innerHTML = body[0];\r\n        td.style.fontSize = '12px'\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n  \r\n      const tableRoot = tooltipEl.querySelector('table');\r\n  \r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n  \r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n  \r\n    const {offsetLeft: positionX, offsetTop: positionY} = chart.canvas;\r\n  \r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + 'px';\r\n    tooltipEl.style.top = positionY + tooltip.caretY + 'px';\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector('div');\r\n  \r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement('div');\r\n      tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\r\n      tooltipEl.style.borderRadius = '3px';\r\n      tooltipEl.style.color = 'white';\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = 'none';\r\n      tooltipEl.style.position = 'absolute';\r\n      tooltipEl.style.transform = 'translate(-50%, 0)';\r\n      tooltipEl.style.transition = 'all .1s ease';\r\n  \r\n      const table = document.createElement('table');\r\n      table.style.margin = '0px';\r\n  \r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n  \r\n    return tooltipEl;\r\n  };\r\n\r\n  \r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: 'Tranding NFTs',\r\n      },\r\n      // tooltip: {\r\n      //   callbacks: {\r\n      //     label: function(item) {\r\n      //       console.log(item.dataset.customData[item.dataIndex].replaceAll('<br/>', '\\n'));\r\n      //       return item.dataset.customData[item.dataIndex];\r\n      //     },\r\n      //   },\r\n      // },\r\n      tooltip: {\r\n        enabled: false,\r\n        position: 'nearest',\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      }\r\n    },\r\n    responsive: true,\r\n    interaction: {\r\n      intersect: false,\r\n    },\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n        grid: {\r\n            display: false\r\n        }\r\n        },\r\n    y: {\r\n        title: {\r\n            text: \"TOP TRENDING IN LEADERBOARD VOTES\",\r\n            display: true,\r\n            font:{\r\n                size: 8\r\n            }\r\n        },\r\n        ticks: {\r\n            display: false\r\n        },\r\n        grid: {\r\n            display: false\r\n        }\r\n      },\r\n    },\r\n\r\n  };\r\n  // console.log(graphData);\r\n    return (\r\n        <div className=\"rank-block\">\r\n                <div className=\"bar-graph-wrapper\">\r\n                  <div className=\"heading\">\r\n                    <h2>\r\n                      <span className=\"highlight\">Reflect Rank</span> NFTs\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"bar-graph\">\r\n                    \r\n                  <Bar options={options} data={data} height={200}/>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default NftRankGraph\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from '../partials/Footer';\r\nimport Header from '../partials/Header';\r\nimport CompareNfts from './CompareNfts';\r\nimport ContactUs from './ContactUs';\r\nimport Home from './Home';\r\nimport SubmitNft from './SubmitNft';\r\nimport UpcommingNft from './UpcommingNft';\r\n\r\nfunction Main() {\r\n\r\n    let location = useLocation();\r\n    let [myRoute, setMyRoute] = useState(null)\r\n    useEffect(()=>{\r\n        setMyRoute(location.pathname)\r\n    }, [location])\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header route={myRoute}/>\r\n                \r\n            {/* <Route exact path=\"/app/test\">\r\n                <CompareNfts/>\r\n            </Route> */}\r\n\r\n            {/* <Route exact path=\"/submit-nft\">\r\n                <SubmitNft/>\r\n            </Route>\r\n            <Route exact path=\"/upcomming-nft\">\r\n                <UpcommingNft/>\r\n            </Route>\r\n            <Route exact path=\"/compare-nft\">\r\n                <CompareNfts/>\r\n            </Route> */}\r\n            <Route exact path=\"/contact-us\">\r\n                <ContactUs/>\r\n            </Route>\r\n\r\n\r\n            <Route exact path=\"/\">\r\n                <CompareNfts/>\r\n                {/* <Home/> */}\r\n            </Route>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header />\r\n            <div className=\"admin-container\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"page-404-error text-center\">\r\n                        <div className=\"error\">\r\n                            <h1 className=\"display-1 font-weight-bold\">404</h1>\r\n                            <h2 className=\"peak text-uppercase\">Seems you are lost !</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","const listNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_LIST_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listNft;\r\n","const trendingNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TRENDING_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default trendingNft;\r\n","import { combineReducers } from \"redux\";\r\nimport listNft from \"./listNft\";\r\n// import defaultJobReducere from \"./defaultJob\";\r\n// import updateCounter from \"./updateCounter\";\r\nimport trendingNft from \"./trendingNft\";\r\nconst allReducres = combineReducers({\r\n    trendingNft: trendingNft,\r\n    listNft: listNft\r\n});\r\n\r\nexport default allReducres;\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport './App.css';\nimport Main from \"./pages/Main\";\nimport NoMatch from './partials/NoMatch';\nimport allReducres from \"./reducers\";\nconst store = createStore(\n  allReducres,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\nfunction App() {\n  \n\n\n  return (\n    <Provider store={store}>\n      \n      <Router>\n        {/* <Test/> */}\n        <Switch >\n          \n          \n          <Route exact path={[\"/\", \"/submit-nft\", \"/upcomming-nft\", \"/contact-us\", \"/compare-nft\"]}>\n            <Main/> \n          </Route>\n          <Route path=\"*\">\n              <NoMatch />\n          </Route>\n\n        </Switch >\n\n\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}