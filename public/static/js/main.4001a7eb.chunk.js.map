{"version":3,"sources":["partials/Footer.js","utils/constant.js","partials/Header.js","pages/ContactUs.js","actions/index.js","utils/axios.js","utils/Requests.js","utils/common.js","partials/DotBar.js","partials/MobileNftList.js","partials/NftListItem.js","partials/NftRankGraph.js","partials/NftList.js","partials/CarouselItem.js","partials/TrendingNfts.js","pages/Home.js","partials/submit_nft/UploadImageInput.js","pages/SubmitNft.js","partials/upcoming_nft/SocialMediaInput.js","partials/upcoming_nft/UploadImageInput.js","partials/UpcommingNftForm.js","partials/UpcommingNftList.js","pages/UpcommingNft.js","pages/Main.js","partials/NoMatch.js","reducers/listNft.js","reducers/trendingNft.js","reducers/index.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","react_default","a","createElement","className","href","target","assetUrl","nftAssetUrl","serverUrl","Header","_ref","route","Fragment","react_router_dom","to","src","alt","width","height","ContactUs","style","color","trendingNft","type","payload","arguments","length","undefined","listNft","axios","defaults","headers","common","instance","create","baseURL","requests","all","trending_nft","submit_nft","do_like","check_email_exist","tranding_chart","upcomming_nft","submit_upcomming_nft","set_loading","message","toast","loading","resolve_loading","id","status","update","render","isLoading","autoClose","closeButton","calculate_average","popularity","originality","community","growth_evaluation","resell_evaluation","potential_blue_chip","parseInt","toFixed","calculate_grade","score","DotBar","bars","item_fill","map","item","index","key","liked","JSON","parse","localStorage","getItem","MobileNftList","data","nft_images","Object","objectWithoutProperties","image","nft_name","fname","nft_link","onClick","e","preventDefault","$","slideToggle","total_likes","includes","totalLike","post","then","response","console","log","push","setItem","stringify","elm","document","getElementsByClassName","closest","innerHTML","getElementsByTagName","classList","remove","add","elm2","addLike","catch","error","partials_DotBar","display","twitter_link","rel","discord_link","collection_blockchain","maximum_number_in_collection","NftListItem","uniquekey","uuidv4","utility","colSpan","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","NftRankGraph","graphData","labels","months","dataset","likes","forEach","element","label","customData","tooltip","backgroundColor","hoverBackgroundColor","stack","datasets","getOrCreateTooltip","chart","tooltipEl","canvas","parentNode","querySelector","background","borderRadius","opacity","pointerEvents","position","transform","transition","table","margin","appendChild","options","plugins","title","text","enabled","external","context","body","titleLines","bodyLines","b","lines","tableHead","tr","borderWidth","th","createTextNode","tableBody","i","labelColors","td","fontSize","tableRoot","firstChild","_chart$canvas","positionX","offsetLeft","positionY","offsetTop","left","caretX","top","caretY","font","bodyFont","string","padding","callbacks","dataIndex","responsive","interaction","intersect","scales","x","stacked","grid","y","size","ticks","index_modern","NftList","list_nft","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","set_is_list_nft_loading","_useState3","_useState4","set_is_graph_nft_loading","_useState5","_useState6","nftGraphData","setNftGraphData","useEffect","get","partials_NftListItem","partials_MobileNftList","partials_NftRankGraph","CarouselItem","TrendingNfts","is_trending_nft_loading","useRef","OwlCarousel_default","items","loop","autoplay","autoplayTimeout","0","768","1200","dots","partials_CarouselItem","Home","set_is_trending_nft_loading","partials_TrendingNfts","partials_NftList","UploadImageInput","uploadImagesData","saveNftImages","deleteNftImages","validate","nftDataError","name","class","onChange","onBlur","accept","htmlFor","submit_nft_image","nft_image","loadingId","SubmitNft","setNftData","setNftDataError","thankyou","setThankyou","_useState7","_useState8","setUploadImagesData","getElementById","value","saveNftData","prev","files","objectSpread","defineProperty","el","trim","match","checkEmail","email","field_name","onSubmit","flag","form","Array","from","elements","formData","FormData","append","concat","file","disabled","reset","keys","_i","_Object$entries","entries","_ref2","split","finally","method","encType","placeholder","project_name","opensea_link","min","item_sold","collection_contract_address","submit_nft_UploadImageInput","toConsumableArray","filter","SocialMediaInput","addSocialMediaField","deleteSocialMediaField","socialMediaData","socialMediaDataError","upcommingNftDataError","defaultValue","social_media","social_media_link","media","media_link","setuploadImagesData","upcoming_nft_image","upcoming_nft_images","UpcommingNftForm","startDate","setstartDate","setupcommingNftData","setupcommingNftDataError","_useState9","_useState10","setSocialMediaData","_useState11","_useState12","setsocialMediaDataError","_useState13","_useState14","timezoneSelectorOptions","moment","tz","names","reduce","memo","offset","utcOffset","sort","timezone","format","option","validate_social_media","social_media_message","social_media_link_message","action","website","react_datepicker_min_default","selected","date","minDate","Date","placeholderText","onChangeRaw","release_date","onblurLunchTime","onFocus","release_time","timeZoneSelect","network","step","unit_price_eth","max_number_collection","upcoming_nft_SocialMediaInput","upcoming_nft_UploadImageInput","cols","rows","briefdescription","UpcommingNftList","setupcomming_nft","socialmedia","images","UpcommingNft","partials_UpcommingNftForm","partials_UpcommingNftList","Main","location","useLocation","myRoute","setMyRoute","pathname","partials_Header","react_router","exact","path","pages_SubmitNft","pages_UpcommingNft","pages_ContactUs","pages_Home","react_toastify_esm","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","partials_Footer","NoMatch","allReducres","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","pages_Main","partials_NoMatch","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4001a7eb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"gemstool-footer\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"credits\">\r\n                        <div className=\"copyright\">\r\n                            <span>Copyright 2022 | Gems Tools</span>\r\n                        </div>\r\n                        <div className=\"developed\">\r\n                            <span>Designed and Developed by <a href=\"https://qalbit.com/\" target=\"_blank\"> QalbIT Solution </a> </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const baseUrl = \"https://gems.tools/\";\r\nexport const assetUrl = \"https://gems.tools/\";\r\nexport const serverUrl = \"https://gems.tools/\";\r\nexport const nftAssetUrl = serverUrl+\"storage/app/public/images/nftimages/\";\r\n//http://dev.qalbit.com/gemstools/\r\n// -> Local : storage/images/nftimages/\r\n// -> Live: storage/app/public/images/nftimages/\r\n\r\n// Favicon : https://dev.qalbit.com/gemstools/images/favicon.png\r\n/*\r\n    replace {{asset('images')}}/favicon.png in favicon in welcome.blade.php\r\n*/","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { assetUrl } from '../utils/constant';\r\nfunction Header({route}) {\r\n    return (\r\n\r\n        <>\r\n        <header>\r\n            <nav className=\"head-nav\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"brand-logo\">\r\n                            <Link to=\"/\"><img src={assetUrl+\"images/gemstool-logo.png\"} alt=\"NFTs Grades image\" width=\"180px\" height=\"46px\" /></Link>\r\n                        </div>\r\n                        <div className=\"nav-links\">\r\n                            <div className=\"hemburger\">\r\n                                <button >\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"nav-links\">\r\n                                <ul className=\"user-list\">\r\n                                    <li>\r\n                                        <Link to=\"/upcomming-nft\" className={(route == '/upcomming-nft') ? 'active' : ''}>Upcoming NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/submit-nft\" className={(route == '/submit-nft') ? 'active' : ''}>Submit NFTs</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to=\"/contact-us\" className={(route == '/contact-us') ? 'active' : ''}>Contact us</Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mobile-nav\">\r\n                            <ul className=\"mobile-userlist\">\r\n                                <li>\r\n                                    <Link to=\"/submit-nft\">Submit NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/upcomming-nft\">Upcoming NFTs</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/contact-us\">Contact us</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ContactUs() {\r\n    return (\r\n        <main className=\"main-spacing\">\r\n            <section>\r\n                <div className='container-lg'>\r\n                    <h4 className='highlight bold-14 mb-3'>If you have any questions or concerns about your NFT, we offer 24 hour around the clock assistance, you can email or dm us on Twitter!</h4>\r\n                    <div className=\"twitter-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Twitter </span>: <span>GemsToolsNFT</span> </div>\r\n                    </div>\r\n                    <div className=\"mail-handler\">\r\n                        <div className=\"info\"><span className='highlight bold-18' style={{color:'#F2911B'}}> Email </span>: <a href='mailto:gemstoolsnft@gmail.com' className='text-white'> gemstoolsnft@gmail.com </a> </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContactUs\r\n","export const updateDefaultjob = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_DEFAULT_JOB\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const updateCounter = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_COUNTER\",\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport const trendingNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_TRENDING_NFT\",\r\n        payload: data,\r\n    };\r\n};\r\nexport const listNft = (data = null) => {\r\n    return {\r\n        type: \"UPDATE_LIST_NFT\",\r\n        payload: data,\r\n    };\r\n};","import axios from \"axios\";\r\n// http://192.168.1.7:8000\r\n// http://dev.qalbit.com/gemstools\r\n// https://gems.tools/\r\naxios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\r\nconst instance = axios.create({\r\n    baseURL: \"https://gems.tools\"\r\n});\r\n\r\nexport default instance","const requests = {\r\n    all: `/api/nftlists`,\r\n    trending_nft : `/api/trendingnft`,\r\n    submit_nft: `/api/submit-nft`,\r\n    do_like: `/api/do-like`,\r\n    check_email_exist: `/api/checkemail`,\r\n    tranding_chart: `/api/graphdata`,\r\n    upcomming_nft: `/api/upcomingnft`,\r\n    submit_upcomming_nft: `/api/add-upcoming-nft`,\r\n}\r\nexport default requests;","import { toast } from 'react-toastify';\r\n\r\nexport const toast_success = (message) => {\r\n    toast.success(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const toast_warning = (message) => {\r\n    toast.warn(message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    });\r\n}\r\n\r\nexport const set_loading = (message) => {\r\n    return toast.loading(message)\r\n}\r\n\r\nexport const resolve_loading = (id, status, message) => {\r\n    return toast.update(id, { render: message, type:status, isLoading: false, autoClose: 5000,closeButton: true });\r\n}\r\n\r\nexport const calculate_average = (popularity, originality, community, growth_evaluation, resell_evaluation, potential_blue_chip) => {\r\n    return (\r\n        (parseInt(popularity || 0) + parseInt(originality || 0) + parseInt(community || 0) + parseInt(growth_evaluation || 0) + parseInt(resell_evaluation || 0) + parseInt((potential_blue_chip||0)*10)) \r\n    / 6).toFixed(2)\r\n}\r\n\r\nexport const calculate_grade = (score) => {\r\n    if(score >= 90 && score <= 93){\r\n        return 'A-';\r\n    }else if(score >= 94 && score <= 97){\r\n        return 'A';\r\n    }else if(score >= 98 && score <= 100){\r\n        return 'A+';\r\n    }\r\n    else{\r\n        return '-';\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction DotBar({bars}) {\r\n    var color = 'grey';\r\n    var item_fill = 0;\r\n    if(bars > 0 && bars <= 3){\r\n        color = 'red'\r\n        item_fill = 1\r\n    }\r\n    else if(bars > 3 && bars  <= 7){\r\n        color = 'yellow'\r\n        item_fill = 3\r\n    }\r\n    else if(bars > 7 && bars <= 10){\r\n        color = 'green'\r\n        item_fill = 5\r\n    }\r\n  return (\r\n    <div className=\"dot-container\">\r\n        {[1,2,3,4,5].map(function(item, index){\r\n            if(index < item_fill){\r\n                return <span key={index} className={color+ \" dot\"}></span>\r\n            }\r\n            else{\r\n                return <span key={index} className=\"std dot\"></span>\r\n            }\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DotBar","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\n\r\nfunction MobileNftList({data, ...props}) { \r\n  \r\n  const addLike = (id, totalLike) => {\r\n    console.log(id, totalLike);\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  let nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <div className=\"row m-0\">\r\n          <div className=\"col-5 nft-info-col\">\r\n            <div className=\"nft-info\">\r\n              <div className=\"image\">\r\n                <a>\r\n                  <img src={nftAssetUrl+nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                </a>\r\n              </div>\r\n              <div className=\"nft-title\">\r\n                <h2 className=\"highlight\">{data.nft_name}</h2>\r\n              </div>\r\n              <div className=\"nft-user\">\r\n                <h3 className=\"peak\">{data.fname}</h3>\r\n              </div>\r\n              <div className=\"nft-redirect-btn\">\r\n                <a href={data.nft_link} target={\"_blank\"}>\r\n                  <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a className=\"highlight imp bold-14 mt-2\" onClick={\r\n                  (e)=>{\r\n                    e.preventDefault();\r\n                    $(\".more-detail\"+data.id).slideToggle('fast');\r\n                  }\r\n                }>Read more</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-7 nft-stat-col\">\r\n          <div className=\"action-btns\">\r\n              <div className=\"mb-2 mobile-like-container\">\r\n                <button className=\"total_liks_count\">\r\n                  <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                </button>\r\n                {\r\n                  liked.includes(data.id) ? <>\r\n                    <button className=\"action liked\">\r\n                      <span>\r\n                      Liked&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </> : <>\r\n                    <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                      <span>\r\n                        Like&nbsp;\r\n                      </span>\r\n                      <i className=\"fas fa-thumbs-up\"></i>\r\n                      <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                    </button>\r\n                  </>\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>% NFTs Sold</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Social media</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.community)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Design</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_grade(data.originality)}</span>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          <div className=\"col-12 mt-2\">\r\n            <div className=\"nft-stats\">\r\n              <div className=\"item\"></div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Growth Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.growth_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>NFTs Resell Evaluation</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{data.resell_evaluation || \"0\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Potential Blue Chip</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <div className=\"potential-blue-chip-graph\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"item\">\r\n                <div className=\"text\">\r\n                  <span>Average</span>\r\n                </div>\r\n                <div className=\"stat\">\r\n                  <span>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-12\">\r\n              <div className={\"mobile-more-detail more-detail\"+data.id} style={{display:'none'}}>\r\n                <div className=\"social-media my-2\">\r\n                  <span className=\"highlight\">Social media: </span>\r\n                  <span>\r\n                    {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                    {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                  </span>\r\n                </div>  \r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                </div>\r\n                <div className=\"mb-2\">\r\n                  <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"50px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileNftList;\r\n","import $ from 'jquery';\r\nimport React from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { calculate_average, calculate_grade } from '../utils/common';\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport DotBar from './DotBar';\r\n\r\nvar liked = JSON.parse(localStorage.getItem('likedItems'));\r\nif(liked == null){\r\n  liked = [];\r\n}\r\nfunction NftListItem({ data, uniquekey, ...props }) {\r\n  \r\n  const addLike = (id, totalLike) => {\r\n    liked.push(id)\r\n    localStorage.setItem('likedItems', JSON.stringify(liked))\r\n\r\n    let elm = document.getElementsByClassName('like'+id)[0];\r\n    elm.closest('td').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm.classList.remove('like')\r\n    elm.classList.add('liked')\r\n    \r\n    let elm2 = document.getElementsByClassName('like'+id)[1];\r\n    elm2.closest('.mobile-like-container').getElementsByClassName('count')[0].innerHTML = totalLike+1\r\n    elm2.getElementsByTagName('span')[0].innerHTML = 'Liked&nbsp;'\r\n    elm2.classList.remove('like')\r\n    elm2.classList.add('liked')\r\n\r\n  }\r\n  \r\n\r\n  const likeNft = (id, totalLike) => {\r\n    if(!liked.includes(id)){\r\n      axios.post(requests.do_like, {\r\n        id: id\r\n      } )\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n          addLike(id, totalLike)\r\n        })\r\n        .catch(function (error) {})\r\n    }\r\n  }\r\n\r\n  var nft_images = JSON.parse(data.image);\r\n\r\n  return (\r\n      <>\r\n          <tr key={uuidv4()} className='border-0'>\r\n            <td>\r\n              <div className=\"nft-detail\">\r\n                <div className=\"image\">\r\n\r\n                  {\r\n                    (nft_images && nft_images.length) > 0 ? <>\r\n                        <a href={nftAssetUrl+nft_images[0]} target={\"_blank\"}>\r\n                            <img src={nftAssetUrl+nft_images[0]} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                        </a>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    </>\r\n                  }\r\n\r\n                  {/* {\r\n                    data.image && <>\r\n                      {\r\n                        nft_images.map((item, index)=>{\r\n                          return <>\r\n                              <a href={nftAssetUrl+item} target={\"_blank\"}>\r\n                                  <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" height=\"90px\" />\r\n                              </a>\r\n                            </>\r\n                        })\r\n                      }\r\n                    </>\r\n                  } */}\r\n                </div>\r\n                <div className=\"nft-content\">\r\n                    <div className=\"nft-name\">\r\n                        <span>{data.nft_name}</span>\r\n                    </div>\r\n                    {/* <div className=\"nft-user-name\">\r\n                        <span>{data.fname}</span>\r\n                    </div> */}\r\n                    <div className=\"nft-detail-btn\">\r\n                        <a href={data.nft_link} target={'_blank'}>\r\n                            <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <a onClick={\r\n                          (e)=>{\r\n                            e.preventDefault();\r\n                            $(\".more-detail\"+data.id).slideToggle('fast');\r\n                          }\r\n                        } className=\"highlight imp bold-14 mt-2\">Read more</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            </td>\r\n            <td>{data.utility}</td>\r\n            <td>\r\n              <div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">% NFTs Sold</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.popularity)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Social media</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.community)}</span>\r\n                </div>\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">Design</span>\r\n                  <span className=\"color-orange\">{calculate_grade(data.originality)}</span>\r\n                </div> \r\n\r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Growth Evaluation</span>\r\n                  <span className=\"color-orange\">{data.growth_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <span className=\"text-left\">NFTs Resell Evaluation</span>\r\n                  <span className=\"color-orange\">{data.resell_evaluation || \"0\"}</span>\r\n                </div>            \r\n                <div className=\"table-detail-column-data\">\r\n                  <div className=\"text-left\">Potential Blue Chip </div>\r\n                  <div className=\"potential-blue-chip-graph text-left\">\r\n                    <DotBar bars={data.potential_blue_chip} />\r\n                  </div>\r\n                </div>            \r\n              </div>\r\n            </td>\r\n            <td>{calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}</td>\r\n            <td>\r\n                <div className=\"action-btns\">\r\n                  <div>\r\n                    <button className=\"total_liks_count\">\r\n                      <i className=\"fas fa-heart\"></i> <span className=\"count\">{data.total_likes}</span>\r\n                    </button>\r\n                    {\r\n                      liked.includes(data.id) ? <>\r\n                        <button className=\"action liked\">\r\n                          <span>\r\n                          Liked&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </> : <>\r\n                        <button className={\"action like \"+ 'like'+data.id} onClick={()=>likeNft(data.id, data.total_likes)}>\r\n                          <span>\r\n                            Like&nbsp;\r\n                          </span>\r\n                          <i className=\"fas fa-thumbs-up\"></i>\r\n                          <i className=\"fas fa-thumbs-up shadow\"></i>\r\n                        </button>\r\n                      </>\r\n                    }\r\n                  </div>\r\n                </div>\r\n            </td>\r\n          </tr>\r\n          <tr key={uuidv4()} className=\"text-left\">\r\n            <td colSpan={6} className=\"p-0\">\r\n              <div className={\"more-detail\"+data.id} style={{display: 'none'}}>\r\n\r\n                {\r\n                  (data.twitter_link || data.discord_link) ? <>\r\n                    <div className='social-media mb-2'>\r\n                        <span className='highlight'>Social media: </span> \r\n                        <span>\r\n                          {data.twitter_link && <a href={data.twitter_link} target=\"_blank\" rel=\"noopener noreferrer\" className='twitter'><i className=\"fab fa-twitter\"></i></a>}\r\n                          {data.discord_link && <a href={data.discord_link} target=\"_blank\" rel=\"noopener noreferrer\" className='discord'><i className=\"fab fa-discord\"></i></a>}\r\n                        </span>\r\n                    </div>\r\n                  </>\r\n                  :<>\r\n                  </>\r\n                }\r\n                <div className='other-detail'>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Collection blockchain: </span> <span>{data.collection_blockchain  || 'NaN'}</span>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                      <span className='highlight'>Maximum number in collection: </span> <span>{data.maximum_number_in_collection || 'NaN'}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='nft-images'>\r\n                  <span className='highlight'>Images: </span>\r\n                    <div>\r\n                      {\r\n                          nft_images.map((item, index)=>{\r\n                            return <a href={nftAssetUrl+item} key={index} target={\"_blank\"}>\r\n                                    <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"90px\" />\r\n                                </a>\r\n                          })\r\n                        }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </td>     \r\n          </tr>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default NftListItem;\r\n","import {\r\n  BarElement, CategoryScale, Chart as ChartJS, LinearScale, Title,\r\n  Tooltip\r\n} from 'chart.js';\r\nimport React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip\r\n);\r\n\r\n\r\n\r\nfunction NftRankGraph({graphData, ...props}) {\r\n  const labels = graphData.months;\r\n  const dataset = [];\r\n  graphData.data.likes.forEach((element, index) => {\r\n    dataset.push({\r\n      label: graphData.months[index],\r\n      data: element,\r\n      customData: graphData.data.tooltip[index],\r\n      backgroundColor: \"rgb(255, 255, 255)\",\r\n      hoverBackgroundColor: \"rgb(245 222 179)\",\r\n      stack: graphData.months[index],\r\n    })\r\n  });\r\n  \r\n  const data = {\r\n    labels,\r\n    datasets: dataset\r\n  };\r\n\r\n  // [\r\n  //   {\r\n  //     label: \"Dataset 1\",\r\n  //     data: [2, 5, 6],\r\n  //     customData: ['hello', 'how', 'are'],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 0\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 2\",\r\n  //     data: [9, 8, 3],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 1\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 3\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 3\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 4\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 4\",\r\n  //   },\r\n  //   {\r\n  //     label: \"Dataset 5\",\r\n  //     data: [4, 5, 10],\r\n  //     customData: [],\r\n  //     backgroundColor: \"rgb(255, 255, 255)\",\r\n  //     hoverBackgroundColor: \"rgb(245 222 179)\",\r\n  //     stack: \"Stack 5\",\r\n  //   },\r\n  // ]\r\n\r\n  const externalTooltipHandler = (context) => {\r\n    // Tooltip Element\r\n    const {chart, tooltip} = context;\r\n    const tooltipEl = getOrCreateTooltip(chart);\r\n  \r\n    // Hide if no tooltip\r\n    if (tooltip.opacity === 0) {\r\n      tooltipEl.style.opacity = 0;\r\n      return;\r\n    }\r\n  \r\n    // Set Text\r\n    if (tooltip.body) {\r\n      const titleLines = tooltip.title || [];\r\n      const bodyLines = tooltip.body.map(b => b.lines);\r\n  \r\n      const tableHead = document.createElement('thead');\r\n  \r\n      titleLines.forEach(title => {\r\n        const tr = document.createElement('tr');\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const th = document.createElement('th');\r\n        th.style.borderWidth = 0;\r\n        const text = document.createTextNode(title);\r\n  \r\n        th.appendChild(text);\r\n        tr.appendChild(th);\r\n        tableHead.appendChild(tr);\r\n      });\r\n  \r\n      const tableBody = document.createElement('tbody');\r\n      bodyLines.forEach((body, i) => {\r\n        const colors = tooltip.labelColors[i];\r\n  \r\n        // const span = document.createElement('span');\r\n        // span.style.background = colors.backgroundColor;\r\n        // span.style.borderColor = colors.borderColor;\r\n        // span.style.borderWidth = '2px';\r\n        // span.style.marginRight = '10px';\r\n        // span.style.height = '10px';\r\n        // span.style.width = '10px';\r\n        // span.style.display = 'inline-block';\r\n  \r\n        const tr = document.createElement('tr');\r\n        tr.style.backgroundColor = 'inherit';\r\n        tr.style.borderWidth = 0;\r\n  \r\n        const td = document.createElement('td');\r\n        td.style.borderWidth = 0;\r\n        const text = document.createElement('div');\r\n        text.innerHTML = body[0];\r\n        td.style.fontSize = '12px'\r\n        // td.appendChild(span);\r\n        td.appendChild(text);\r\n        tr.appendChild(td);\r\n        tableBody.appendChild(tr);\r\n      });\r\n  \r\n      const tableRoot = tooltipEl.querySelector('table');\r\n  \r\n      // Remove old children\r\n      while (tableRoot.firstChild) {\r\n        tableRoot.firstChild.remove();\r\n      }\r\n  \r\n      // Add new children\r\n      // tableRoot.appendChild(tableHead);\r\n      tableRoot.appendChild(tableBody);\r\n    }\r\n  \r\n    const {offsetLeft: positionX, offsetTop: positionY} = chart.canvas;\r\n  \r\n    // Display, position, and set styles for font\r\n    tooltipEl.style.opacity = 1;\r\n    tooltipEl.style.left = positionX + tooltip.caretX + 'px';\r\n    tooltipEl.style.top = positionY + tooltip.caretY + 'px';\r\n    tooltipEl.style.font = tooltip.options.bodyFont.string;\r\n    tooltipEl.style.padding = tooltip.options.padding + 'px ' + tooltip.options.padding + 'px';\r\n  };\r\n  const getOrCreateTooltip = (chart) => {\r\n    let tooltipEl = chart.canvas.parentNode.querySelector('div');\r\n  \r\n    if (!tooltipEl) {\r\n      tooltipEl = document.createElement('div');\r\n      tooltipEl.style.background = 'rgba(0, 0, 0, 0.7)';\r\n      tooltipEl.style.borderRadius = '3px';\r\n      tooltipEl.style.color = 'white';\r\n      tooltipEl.style.opacity = 1;\r\n      tooltipEl.style.pointerEvents = 'none';\r\n      tooltipEl.style.position = 'absolute';\r\n      tooltipEl.style.transform = 'translate(-50%, 0)';\r\n      tooltipEl.style.transition = 'all .1s ease';\r\n  \r\n      const table = document.createElement('table');\r\n      table.style.margin = '0px';\r\n  \r\n      tooltipEl.appendChild(table);\r\n      chart.canvas.parentNode.appendChild(tooltipEl);\r\n    }\r\n  \r\n    return tooltipEl;\r\n  };\r\n\r\n  \r\n  const options = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: 'Tranding NFTs',\r\n      },\r\n      // tooltip: {\r\n      //   callbacks: {\r\n      //     label: function(item) {\r\n      //       console.log(item.dataset.customData[item.dataIndex].replaceAll('<br/>', '\\n'));\r\n      //       return item.dataset.customData[item.dataIndex];\r\n      //     },\r\n      //   },\r\n      // },\r\n      tooltip: {\r\n        enabled: false,\r\n        position: 'nearest',\r\n        external: externalTooltipHandler,\r\n        callbacks: {\r\n          label: function(item) {\r\n            return item.dataset.customData[item.dataIndex];\r\n          },\r\n        },\r\n      }\r\n    },\r\n    responsive: true,\r\n    interaction: {\r\n      intersect: false,\r\n    },\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n        grid: {\r\n            display: false\r\n        }\r\n        },\r\n    y: {\r\n        title: {\r\n            text: \"TOP TRENDING IN LEADERBOARD VOTES\",\r\n            display: true,\r\n            font:{\r\n                size: 8\r\n            }\r\n        },\r\n        ticks: {\r\n            display: false\r\n        },\r\n        grid: {\r\n            display: false\r\n        }\r\n      },\r\n    },\r\n\r\n  };\r\n  // console.log(graphData);\r\n    return (\r\n        <div className=\"rank-block\">\r\n                <div className=\"bar-graph-wrapper\">\r\n                  <div className=\"heading\">\r\n                    <h2>\r\n                      <span className=\"highlight\">Reflect Rank</span> NFTs\r\n                    </h2>\r\n                  </div>\r\n                  <div className=\"bar-graph\">\r\n                    \r\n                  <Bar options={options} data={data} height={200}/>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n    )\r\n}\r\n\r\nexport default NftRankGraph\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listNft } from \"../actions\";\r\nimport axios from \"../utils/axios\";\r\nimport { assetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\nimport MobileNftList from \"./MobileNftList\";\r\nimport NftListItem from \"./NftListItem\";\r\nimport NftRankGraph from \"./NftRankGraph\";\r\n\r\nfunction NftList() {\r\n  const list_nft = useSelector((state) => state.listNft);\r\n  const dispatch = useDispatch();\r\n  const [is_list_nft_loading, set_is_list_nft_loading] = useState(true);\r\n  const [is_graph_nft_loading, set_is_graph_nft_loading] = useState(true);\r\n  const [nftGraphData, setNftGraphData] = useState(null)\r\n  useEffect(() => {\r\n    axios\r\n      .get(requests.all)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        set_is_list_nft_loading(false);\r\n        if (data.status === \"success\") {\r\n          dispatch(listNft(data.data));\r\n          set_is_list_nft_loading(false);\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        set_is_list_nft_loading(false);\r\n      });\r\n\r\n    axios\r\n      .get(requests.tranding_chart)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        set_is_graph_nft_loading(false);\r\n        setNftGraphData(data.data)\r\n      })\r\n      .catch(function(error) {\r\n        set_is_graph_nft_loading(false);\r\n      });\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"nft-group-section\">\r\n      <div className=\"container-lg\">\r\n        <div className=\"row custom-newnft-row\">\r\n          <div className=\"col-xl-8\">\r\n            <div className=\"new-nft\">\r\n              <div className=\"heading\">\r\n                <h1>\r\n                  <span className=\"highlight\">New</span> NFTs\r\n                </h1>\r\n              </div>\r\n              <div className=\"nft-table-wrapper\">\r\n                <div className=\"\">\r\n                  <table className=\"nft-table table table-borderless\" id=\"nft-list-table\">\r\n                    <thead id=\"nft-list-table\">\r\n                      <tr>\r\n                        <td className=\"nft-detail-col\">NFTs Details</td>\r\n                        <td>Utility</td>\r\n                        {/* <td>Popularity</td>\r\n                        <td>Community</td>\r\n                        <td>Originality</td> */}\r\n                        <td className=\"nft-detail-column\">\r\n                          Detail\r\n                        </td>\r\n                        <td>Average</td>\r\n                        <td></td>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {list_nft && list_nft.length ? (\r\n                        \r\n                          list_nft.map((item, index) => {\r\n                            return (\r\n                                <NftListItem data={item} key={index} />\r\n                            );\r\n                          })\r\n                        \r\n                      ) : (\r\n                        <>\r\n                          <tr>\r\n                            <td colSpan={6}>\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                              <div className=\"skeleton\">\r\n                                <br /><br /><br />\r\n                              </div><br />\r\n                            </td>\r\n                          </tr>\r\n                        </>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mobile-nft-list\">\r\n                {list_nft && list_nft.length ? (\r\n                  <>\r\n                    {list_nft.map((item, index) => {\r\n                      return (\r\n                        <div className=\"user-nft-block-mobile\" key={index}>\r\n                          <MobileNftList data={item}/>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div>\r\n                      <div className=\"skeleton\">\r\n                        <br /><br /><br /><br />\r\n                      </div><br />\r\n                      <div className=\"skeleton\">\r\n                        <br /><br /><br /><br />\r\n                      </div><br />\r\n                      <div className=\"skeleton\">\r\n                        <br /><br /><br /><br />\r\n                      </div><br />\r\n                      <div className=\"skeleton\">\r\n                        <br /><br /><br /><br />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"right-block\">\r\n              {(nftGraphData == null) ? <>\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br />\r\n                </div>\r\n              </> :\r\n              <>\r\n                <NftRankGraph graphData={nftGraphData}/>\r\n              </>}\r\n              <div className=\"gooogle-ads\">\r\n                <img src={assetUrl+\"images/img1.png\"} alt=\"dummy image\" />\r\n                <img src={assetUrl+\"images/img2.png\"} alt=\"dummy image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default NftList;\r\n","import React from \"react\";\r\nimport { calculate_average, calculate_grade } from \"../utils/common\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport DotBar from \"./DotBar\";\r\n\r\nfunction CarouselItem({ data, ...props }) {\r\n  var nft_images = JSON.parse(data.image);\r\n  return (\r\n    <div className=\"custom-carasol-min-height\">\r\n      <div className=\"carousel-items\">\r\n        <div className=\"item nft-block\">\r\n          <div className=\"content\">\r\n            <div className=\"row m-0\">\r\n              <div className=\"col-5 nft-info-col\">\r\n                <div className=\"nft-info\">\r\n                  <div className=\"image\">\r\n                    <a>\r\n                      <img src={nftAssetUrl + nft_images[0]} alt=\"Nft profile image\" height=\"90px\" width=\"90px\" />\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"nft-title\">\r\n                    <h2 className=\"highlight\">{data.nft_name}</h2>\r\n                  </div>\r\n                  <div className=\"nft-user\">\r\n                    <h3 className=\"peak\">{data.fname}</h3>\r\n                  </div>\r\n                  <div className=\"nft-redirect-btn\">\r\n                    <a href={data.nft_link} target={\"_blank\"}>\r\n                      <i className=\"fas fa-external-link-alt\"></i> Visit now\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-7 nft-stat-col d-flex flex-column justify-content-around\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>% NFTs Sold</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.popularity)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Social media</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.community)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Design</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{calculate_grade(data.originality)}</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.originality || 'NaN'}</span>\r\n                    </div>\r\n                  </div> */}\r\n\r\n                  \r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 mt-3\">\r\n                <div className=\"nft-stats\">\r\n                  <div className=\"item\">\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Growth Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.growth_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>NFTs Resell Evaluation</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>{data.resell_evaluation || \"0\"}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    {/* style={{display: 'block'}} */}\r\n                    <div className=\"text\">\r\n                      <span>Potential Blue Chip</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <div className=\"potential-blue-chip-graph\">\r\n                        <DotBar bars={data.potential_blue_chip} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"text\">\r\n                      <span>Average</span>\r\n                    </div>\r\n                    <div className=\"stat\">\r\n                      <span>\r\n                      {calculate_average(data.popularity, data.originality, data.community, data.growth_evaluation, data.resell_evaluation, data.potential_blue_chip)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CarouselItem;\r\n","import 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport React, { useRef } from \"react\";\r\nimport OwlCarousel from 'react-owl-carousel';\r\n// import Carousel from \"react-elastic-carousel\";\r\nimport CarouselItem from \"./CarouselItem\";\r\nfunction TrendingNfts({ data, ...props }) {\r\n\r\n  if (props.is_trending_nft_loading) {\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n                <div className=\"skeleton\">\r\n                  <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  } else {\r\n    if (data && data.length > 0) {\r\n      var itemsPerPage = 3;\r\n      var totalPages = 3;\r\n      var carouselRef = useRef(null);\r\n      var resetTimeout;\r\n      var breakPoints = [\r\n        { width: 1, itemsToShow: 1 },\r\n        { width: 767, itemsToShow: 2 },  \r\n        { width: 1100, itemsToShow: 3 }  \r\n      ]\r\n    }\r\n    const getTotalPage = () => {\r\n        let width = window.innerWidth;\r\n        if(width >= 1200){\r\n            return 2\r\n        }\r\n        else if(width >= 767){\r\n            return 3\r\n        }\r\n        else{\r\n            return 4\r\n        }\r\n    }\r\n\r\n    const owlresponsive = {\r\n        0 : {\r\n            items : 1\r\n        },\r\n        768 : {\r\n            items : 2\r\n        },\r\n        1200 : {\r\n            items : 3\r\n        }\r\n    };\r\n    return (\r\n      <>\r\n        <section className=\"trending-block\">\r\n          <div className=\"container-lg\">\r\n            <div className=\"heading\">\r\n              <h1>\r\n                <span className=\"highlight\"> Trending </span> NFTs\r\n              </h1>\r\n            </div>\r\n            <div className=\"carousel\">\r\n              {data && data.length > 0 ? (\r\n                <>\r\n                  {/* <Carousel\r\n                    breakPoints={breakPoints}\r\n                    ref={carouselRef}\r\n                    pagination={false}\r\n                    enableAutoPlay={true}\r\n                    showArrows={false}\r\n                    itemPadding={[0, 10, 0, 10]}\r\n                    autoPlaySpeed={4000}\r\n                    onNextEnd={({ index }) => {\r\n                      clearTimeout(resetTimeout);\r\n                      if (index === getTotalPage()) {\r\n                        resetTimeout = setTimeout(() => {\r\n                          carouselRef.current.goTo(0);\r\n                        }, 3000); // same time\r\n                      }\r\n                    }}\r\n                  >\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Carousel> */}\r\n                  <OwlCarousel items={3} loop={true} autoplay={true} autoplayTimeout={4000} responsive={owlresponsive} dots={false}>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <div key={index} className='custom-carasol-min-height'>\r\n                          <CarouselItem data={item} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </OwlCarousel>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3>No data Found</h3>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TrendingNfts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { trendingNft } from '../actions/index';\r\nimport NftList from '../partials/NftList';\r\nimport TrendingNfts from '../partials/TrendingNfts';\r\nimport axios from '../utils/axios';\r\nimport requests from '../utils/Requests';\r\nfunction Home() {\r\n\r\n    const trending_nft = useSelector(state => state.trendingNft)\r\n    const dispatch = useDispatch();\r\n    const [is_trending_nft_loading, set_is_trending_nft_loading] = useState(true)\r\n    \r\n    useEffect(() => {\r\n        axios.get(requests.trending_nft)\r\n            .then(response => response.data)\r\n            .then((data)=>{\r\n                set_is_trending_nft_loading(false);\r\n                if(data.status === 'success'){\r\n                    dispatch(trendingNft(data.data));\r\n                    set_is_trending_nft_loading(false);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                set_is_trending_nft_loading(false);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <main className=\"main-spacing\">\r\n                <TrendingNfts data={trending_nft} is_trending_nft_loading={is_trending_nft_loading}/>\r\n                <NftList />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({ uploadImagesData, saveNftImages, deleteNftImages, validate, nftDataError, ...props }) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file mb-1' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n                <input type=\"file\" name=\"submit_nft_image\" id=\"submit_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n                <label htmlFor=\"submit_nft_image\" className='file-label'>\r\n                    <a className='form-control form-btn'>\r\n                        Choose File\r\n                    </a>\r\n                </label>\r\n        </div>\r\n        <div className=\"error-message\">{nftDataError.submit_nft_image || nftDataError.nft_image}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import React, { useEffect, useState } from 'react';\r\nimport UploadImageInput from '../partials/submit_nft/UploadImageInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from '../utils/Requests';\r\n\r\nvar loadingId = null;\r\nfunction SubmitNft() {\r\n    const [nftData, setNftData] = useState({});\r\n    const [nftDataError, setNftDataError] = useState({});\r\n    const [thankyou, setThankyou] = useState(false)\r\n    const [uploadImagesData, setUploadImagesData] = useState([])\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"submit_nft_image\").value = \"\";\r\n    }, [uploadImagesData])\r\n\r\n    const resetForm = () => {\r\n        document.getElementById('nft-submit-form').reset();\r\n        setNftData({});\r\n        setNftDataError({});\r\n    }\r\n\r\n    const nftSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        var flag = true;\r\n        var form = document.getElementById( 'nft-submit-form' );\r\n        var allFormControls = Array.from(form.elements);\r\n        allFormControls.forEach(element => {\r\n            if(!validate(element)){\r\n                flag = false\r\n            }\r\n        });\r\n\r\n        if(flag){\r\n            var formData = new FormData(form);\r\n            uploadImagesData.forEach((item, index) => {\r\n                formData.append(`nft_image[${index}]`, item.file);\r\n            });\r\n            loadingId = set_loading(\"Please wait...\")\r\n            document.getElementById('submit-nft-button').disabled = true;\r\n            \r\n            axios.post(requests.submit_nft, formData)\r\n                .then(response => response.data)\r\n                .then((data)=>{\r\n                    if(data.status == \"success\"){\r\n                        resolve_loading(loadingId, \"success\", data.message)\r\n                        resetForm();\r\n                        setUploadImagesData([]);\r\n                        setThankyou(true);\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error')\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    var data = error.response.data;\r\n                    if(data.status == 'validation_error' && Object.keys(data.message).length > 0 ){\r\n                        \r\n                        resolve_loading(loadingId, \"error\", 'Validation Error');\r\n                        for (var [key, value] of Object.entries(\r\n                            data.message\r\n                        )) {\r\n\r\n                            var keys = key.split('.');\r\n                            if(keys.length > 1){\r\n                                key = keys[0];\r\n                            }\r\n\r\n                            setNftDataError((prev) => {\r\n                                return {\r\n                                    ...prev,\r\n                                    [key]: value,\r\n                                };\r\n                            });\r\n                        }\r\n                    }\r\n                    else{\r\n                        resolve_loading(loadingId, \"error\", 'Unwanted error');\r\n                    }\r\n                })\r\n                .finally(()=>{\r\n                    document.getElementById('submit-nft-button').disabled = false;\r\n                })\r\n        }\r\n    }\r\n    const saveNftData = (e) => {\r\n        if(e.target.name == \"nft_image\"){\r\n            validate(e.target)\r\n        }\r\n        setNftData((prev)=>{\r\n            if (e.target.type == \"file\") {\r\n                var value = e.target.files[0];\r\n            } else {\r\n                var value = e.target.value;\r\n            }\r\n            return {\r\n                ...prev, \r\n                [e.target.name] : (value == \"\" ? null : value)\r\n            }\r\n        })\r\n    }\r\n    const validate = (el) => {\r\n        if((\r\n            // el.name == 'fname' || \r\n            // el.name == 'lname' ||\r\n            el.name == 'eth_address' || \r\n            el.name == 'nft_name' || \r\n            el.name == 'nft_link' || \r\n            el.name == 'maximum_number_in_collection' || \r\n            el.name == 'collection_blockchain' ||\r\n            el.name == 'twitter_link' \r\n            // || el.name == 'wallet_address' \r\n        ) && el.value.trim() == \"\"){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        // else if(el.name == 'phone' && (el.value.trim()  != \"\" && !(el.value.match(/^\\d{10,12}$/))) ){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Invalid phone number'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'email' && el.value != \"\" && !(el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/))){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Invalid email format'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else if(el.name == 'email' && el.value != \"\"){\r\n            checkEmail(el.value, el.name)\r\n            return true;\r\n        }\r\n        // else if(el.name == 'nft_image' && typeof el.files[0] === 'undefined'){\r\n        //     setNftDataError((prev)=>{\r\n        //         return {\r\n        //             ...prev, \r\n        //             [el.name] : 'Field required'\r\n        //         }\r\n        //     })\r\n        //     return false;\r\n        // }\r\n        else if(el.name == 'submit_nft_image' && uploadImagesData.length <= 0){\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : 'Field required'\r\n                }\r\n            })\r\n            return false;\r\n        }\r\n        else{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [el.name] : null\r\n                }\r\n            })\r\n            return true;\r\n        }\r\n    }\r\n    const checkEmail = (email, field_name) => {\r\n        axios.post(requests.check_email_exist, {\r\n            email : email    \r\n        })\r\n        .then(response => response.data)\r\n        .then((data)=>{\r\n            setNftDataError((prev)=>{\r\n                return {\r\n                    ...prev, \r\n                    [field_name] : data.message\r\n                }\r\n            })\r\n        })\r\n        .catch((error)=> {\r\n\r\n        })\r\n    }\r\n\r\n    const saveNftImages = (e) => {\r\n        if(e.target.files && e.target.files.length > 0){\r\n            setUploadImagesData((prev) => {\r\n                return [\r\n                    ...prev,\r\n                    {\r\n                        name: e.target.files[0].name,\r\n                        file: e.target.files[0]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    const deleteNftImages = (index) => {\r\n        setUploadImagesData((prev)=>{\r\n            var data = prev.filter((item, i)=>{\r\n                return index !== i\r\n            })\r\n        return data\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n                <section className=\"submit-nft\">\r\n                    <div className=\"nft-container\">\r\n                        <div className=\"container-lg\">\r\n                            <div className=\"row m-0\">\r\n                                <h4 className='submit-nft-text-message mb-3'>\r\n                                    Listings (Grading NFTs): Submit your NFT for grading, we will run your project through our algorithm and your project will be listed in 24 hours.\r\n                                    <br/> <span className='text-white'>Wallet to send ETH: 0x81f62Dc678F243251Ed734894E6bf080e58A99EB</span>\r\n                                </h4>\r\n                                <div className=\"col-12 heading p-0\">\r\n                                    <h1> <span className=\"highlight\">Submit</span> NFTs </h1>\r\n                                </div>\r\n                                <div className=\"col-lg-9 col-md-8 left-block\">\r\n                                    <div className=\"nft-form\">\r\n                                        <form onSubmit={nftSubmitHandler} method=\"post\" id=\"nft-submit-form\" encType=\"multipart/form-data\">\r\n                                            <div className=\"row m-0\">\r\n                                                <div className=\"col-lg-6 pl-lg-0 left-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About yourself</h3>\r\n                                                        </div>\r\n                                                        {/* <div className=\"full-name form-group\">\r\n                                                            <div className=\"first-name form-group\">\r\n                                                                <input type=\"text\" name=\"fname\" id=\"fname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"First Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.fname}</div>\r\n                                                            </div>\r\n                                                            <div className=\"last-name form-group\">\r\n                                                                <input type=\"text\" name=\"lname\" id=\"lname\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Last Name\" />\r\n                                                                <div className=\"error-message\">{nftDataError.lname}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"tel\" name=\"phone\" id=\"phone\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Phone Number\" />\r\n                                                            <div className=\"error-message\">{nftDataError.phone}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"project_name\" id=\"project_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.project_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"email\" name=\"email\" id=\"email\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Email\" />\r\n                                                            <div className=\"error-message\">{nftDataError.email}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"opensea_link\" id=\"opensea_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Collection Link (Important)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.opensea_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"wallet_address\" id=\"wallet_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Wallet address (sent ETH from)\" />\r\n                                                            <div className=\"error-message\">{nftDataError.wallet_address}</div>\r\n                                                        </div> */}\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"twitter_link\" id=\"twitter_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Twitter\" />\r\n                                                            <div className=\"error-message\">{nftDataError.twitter_link}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"discord_link\" id=\"discord_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project's Official Discord\" />\r\n                                                            <div className=\"error-message\">{nftDataError.discord_link}</div>\r\n                                                        </div>\r\n                                                        <div className='form-group border-dashed mb-2'>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is the maximum number of items in your collection?</label>\r\n                                                            <input type=\"number\" min={1} name=\"maximum_number_in_collection\" id=\"maximum_number_in_collection\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.maximum_number_in_collection}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">How much have you sold items have you sold from your collection?</label>\r\n                                                            <input type=\"text\" name=\"item_sold\" id=\"item_sold\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.item_sold}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's blockchain?</label>\r\n                                                            <input type=\"text\" name=\"collection_blockchain\" id=\"collection_blockchain\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_blockchain}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <label htmlFor=\"\">What is your collection's contract address(es)? (If available)</label>\r\n                                                            <input type=\"text\" name=\"collection_contract_address\" id=\"collection_contract_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\"/>\r\n                                                            <div className=\"error-message\">{nftDataError.collection_contract_address}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"eth_address\" id=\"eth_address\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"ETH Address\" />\r\n                                                            <div className=\"error-message\">{nftDataError.eth_address}</div>\r\n                                                        </div> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-6 right-box\">\r\n                                                    <div className=\"box-modal\">\r\n                                                        <div className=\"title\">\r\n                                                            <h3>About your NFTs</h3>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"text\" name=\"nft_name\" id=\"nft_name\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Project name\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_name}</div>\r\n                                                        </div>\r\n                                                        <div className=\"form-group\">\r\n                                                            <input type=\"url\" name=\"nft_link\" id=\"nft_link\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"form-control\" placeholder=\"Link\" />\r\n                                                            <div className=\"error-message\">{nftDataError.nft_link}</div>\r\n                                                        </div>\r\n                                                        {/* <div className=\"form-group\">\r\n                                                            <input type=\"file\" name=\"nft_image\" id=\"nft_image\" onChange={saveNftData} onBlur={(e)=>validate(e.target)} className=\"d-none\"/>\r\n                                                            <label htmlFor=\"nft_image\" className=\"file-label form-control\"> \r\n                                                                {nftData.nft_image ? nftData.nft_image.name : \"Image\"}\r\n                                                            </label>\r\n                                                            <div className=\"error-message\">{nftDataError.nft_image}</div>\r\n                                                        </div> */}\r\n                                                        <UploadImageInput \r\n                                                            uploadImagesData={uploadImagesData}\r\n                                                            saveNftImages={saveNftImages}\r\n                                                            deleteNftImages={deleteNftImages}\r\n                                                            validate={validate}\r\n                                                            nftDataError={nftDataError}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <button type=\"submit\" id=\"submit-nft-button\" className=\"form-btn nft-submit-btn\">Submit</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-3 col-md-4 right-block\">\r\n                                    <div className=\"image\">\r\n                                        <img src={assetUrl+\"images/img3.png\"} alt=\"dummy image\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/* overlay for thankyou */}\r\n                {\r\n                    thankyou ? <>\r\n                        <div className=\"custom-modal d-block\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"content\">\r\n                                    <div className=\"title\">\r\n                                        <h4>Thank you</h4>\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                                    </div>\r\n                                    <div className=\"text\">\r\n                                        <p>\r\n                                            We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"redirect\">\r\n                                        <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"overlay d-block\"></div>\r\n                    </> : <></>\r\n                }\r\n                \r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubmitNft\r\n","import React from \"react\";\r\n\r\nfunction SocialMediaInput({\r\n  addSocialMediaField,\r\n  deleteSocialMediaField,\r\n  socialMediaData,\r\n  socialMediaDataError,\r\n  upcommingNftDataError,\r\n  ...props\r\n}) {\r\n    return (\r\n        <div className=\"col-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 col-12\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  name=\"social_media\"\r\n                  id=\"social_media\"\r\n                  className=\"form-control\"\r\n                  defaultValue={\"\"}\r\n                >\r\n                  <option disabled value={\"\"}>Social media</option>\r\n                  <option value=\"twitter\">Twitter</option>\r\n                  <option value=\"discord\">Discord</option>\r\n                  <option value=\"facebook\">Facebook</option>\r\n                </select>\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media ? upcommingNftDataError.social_media : socialMediaDataError.social_media}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"social_media_link\"\r\n                  id=\"social_media_link\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Social media link\"\r\n                  // onBlur={(e) => validate(e.target)}\r\n                />\r\n                <div className=\"error-message\">{upcommingNftDataError.social_media_link ? upcommingNftDataError.social_media_link : socialMediaDataError.social_media_link}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-2 col-12 mb-3\">\r\n              <div className=\"form-group\">\r\n                <button type=\"button\" className=\"form-btn mt-0 px-4 h-100\" onClick={addSocialMediaField}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                {\r\n                  (socialMediaData && socialMediaData.length > 0) && <>\r\n                  <div className=\"col-12\">\r\n                    <ul className=\"socialmedia-list\">\r\n                    {\r\n                      socialMediaData.map((item, index)=>{\r\n                        return (\r\n                          <>\r\n                            <li><span className=\"highlight\">{item.media}: </span> {item.media_link}  &nbsp; &nbsp;<span className=\"float-right highlight imp\" onClick={()=>{deleteSocialMediaField(index)}}><i class=\"fas fa-times\"></i></span></li>\r\n                          </>\r\n                        );\r\n                      })\r\n                    }\r\n                  </ul>\r\n              </div>\r\n                  </>\r\n                }\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SocialMediaInput;\r\n","import React from 'react';\r\n\r\nfunction UploadImageInput({saveNftImages, uploadImagesData, setuploadImagesData, deleteNftImages, validate, upcommingNftDataError, ...props}) {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <div className=\"form-control file-upload\">\r\n            <div className='selected-file-wrapper'>\r\n                {\r\n                    (uploadImagesData && uploadImagesData.length) > 0 ?  <>\r\n                        {\r\n                            uploadImagesData.map((item , index)=>{\r\n                                return <span className='selected-file' key={index}>{item.name} &nbsp; <a href onClick={()=>{deleteNftImages(index)}}> <i class=\"fas fa-times\"></i> </a> </span>\r\n                            })\r\n                        }\r\n                    </>\r\n                    :<>\r\n                        <span className='selected-file'> No file selected</span>\r\n                    </>\r\n                }\r\n            </div>\r\n            <input type=\"file\" name=\"upcoming_nft_image\" id=\"upcoming_nft_image\" onChange={saveNftImages} onBlur={(e)=>{validate(e.target)}} accept=\".jpg,.jpeg,.png\"/>\r\n            <label htmlFor=\"upcoming_nft_image\" className='file-label'>\r\n                <a className='form-control form-btn d-flex align-items-center'>\r\n                    Choose File\r\n                </a>\r\n            </label>\r\n        </div>\r\n        <div className=\"error-message\">{upcommingNftDataError.upcoming_nft_image || upcommingNftDataError.upcoming_nft_images}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UploadImageInput\r\n","import moment from 'moment-timezone';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport SocialMediaInput from '../partials/upcoming_nft/SocialMediaInput';\r\nimport axios from '../utils/axios';\r\nimport { resolve_loading, set_loading } from '../utils/common';\r\nimport { assetUrl } from '../utils/constant';\r\nimport requests from \"../utils/Requests\";\r\nimport UploadImageInput from './upcoming_nft/UploadImageInput';\r\n\r\nvar loadingId = null;\r\nfunction UpcommingNftForm() {\r\n  const [startDate, setstartDate] = useState(null);\r\n  const [upcommingNftData, setupcommingNftData] = useState({});\r\n  const [upcommingNftDataError, setupcommingNftDataError] = useState({});\r\n  const [thankyou, setThankyou] = useState(false)\r\n  const [socialMediaData, setSocialMediaData] = useState([])\r\n  const [socialMediaDataError, setsocialMediaDataError] = useState({});\r\n  const [uploadImagesData, setuploadImagesData] = useState([])\r\n\r\n  // timezone select \r\n  const timezoneSelectorOptions = [];\r\n  moment.tz.names()\r\n  .reduce((memo, tz) => {\r\n    memo.push({\r\n      name: tz,\r\n      offset: moment.tz(tz).utcOffset()\r\n    });\r\n    \r\n    return memo;\r\n  }, [])\r\n  .sort((a, b) => {\r\n    return a.offset - b.offset\r\n  })\r\n  .reduce((memo, tz) => {\r\n    const timezone = tz.offset ? moment.tz(tz.name).format('Z') : '';\r\n    timezoneSelectorOptions.push({\r\n      name: tz.name,\r\n      option: `(GMT${timezone}) ${tz.name}`\r\n    })\r\n    return null;\r\n  }, \"\");\r\n\r\n  // -------------------\r\n\r\n  const saveNftData = (e) => {\r\n    setupcommingNftData((prev) => {\r\n      if (e.target.type == \"file\") {\r\n        var value = e.target.files[0];\r\n      } else {\r\n        var value = e.target.value;\r\n      }\r\n      return {\r\n        ...prev,\r\n        [e.target.name]: value == \"\" ? null : value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n      document.getElementById('submit-upcomming-nft-form').reset();\r\n      setupcommingNftData({});\r\n      setupcommingNftDataError({});\r\n  }\r\n  const onfocusLunchTime = (e) => {\r\n    e.target.type = 'time';\r\n  }\r\n  const onblurLunchTime = (e) => {\r\n    if(e.value == \"\"){\r\n      e.type = 'text';\r\n    }\r\n    validate(e);\r\n  }\r\n\r\n  const nftUpcommingSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    var flag = true;\r\n    var form = document.getElementById(\"submit-upcomming-nft-form\");\r\n    var allFormControls = Array.from(form.elements);\r\n    allFormControls.forEach((element) => {\r\n      if (!validate(element)) {\r\n        flag = false;\r\n      }\r\n    });\r\n\r\n    if (flag) {\r\n      var formData = new FormData(form);\r\n      uploadImagesData.forEach((item, index) => {\r\n        formData.append(`upcoming_nft_images[${index}]`, item.file);\r\n      });\r\n      formData.append(`socialMediaData`, JSON.stringify(socialMediaData));\r\n      loadingId = set_loading(\"Please wait...\");\r\n      document.getElementById(\"submit-upcomming-nft-button\").disabled = true;\r\n\r\n      axios\r\n        .post(requests.submit_upcomming_nft, formData)\r\n        .then((response) => response.data)\r\n        .then((data) => {\r\n          if (data.status == \"success\") {\r\n            resolve_loading(loadingId, \"success\", data.message);\r\n            resetForm();\r\n            setSocialMediaData([]);\r\n            setuploadImagesData([]);\r\n            setThankyou(true);\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          var data = error.response.data;\r\n          if (data.status == \"validation_error\" && Object.keys(data.message).length > 0) {\r\n            resolve_loading(loadingId, \"error\", \"Validation Error\");\r\n            for (var [key, value] of Object.entries(data.message)) {\r\n              var keys = key.split('.');\r\n              if(keys.length > 1){\r\n                key = keys[0];\r\n              }\r\n              setupcommingNftDataError((prev) => {\r\n                // console.log(key);\r\n                // var keys = key.split('.');\r\n                // if(keys.length > 1){\r\n                //   key = keys;\r\n                // }\r\n                return {\r\n                  ...prev,\r\n                  [key]: value,\r\n                };\r\n              });\r\n            }\r\n          } else {\r\n            resolve_loading(loadingId, \"error\", \"Unwanted error\");\r\n          }\r\n        })\r\n        .finally(() => {\r\n          document.getElementById(\"submit-upcomming-nft-button\").disabled = false;\r\n        });\r\n    }\r\n  };\r\n  const validate = (el) => {\r\n    if (\r\n      (el.name == \"project_name\" ||\r\n        el.name == \"website\" ||\r\n        el.name == \"socialmedia\" ||\r\n        el.name == \"briefdescription\" ||\r\n        el.name == \"network\" ||\r\n        el.name == \"release_date\" ||\r\n        el.name == \"timeZoneSelect\" ||\r\n        el.name == \"release_time\") &&\r\n      (el.value.trim() == \"\" || el.value == null)\r\n    ) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"phone\" && el.value.trim() != \"\" && !el.value.match(/^\\d{10,12}$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid phone number\",\r\n        };\r\n      });\r\n      return false;\r\n    } else if (el.name == \"email\" && !el.value.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Invalid email format\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n     else if (el.name == \"nft_image\" && typeof el.files[0] === \"undefined\") {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    } \r\n     else if (el.name == \"upcoming_nft_image\" && uploadImagesData.length <= 0) {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: \"Field required\",\r\n        };\r\n      });\r\n      return false;\r\n    }\r\n    else if((el.name == 'social_media' || el.name == 'social_media_link') && socialMediaData.length <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Field required'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else if((el.name == 'unit_price_eth' && el.value != '') && (el.value * 1) <= 0){\r\n      setupcommingNftDataError((prev)=>{\r\n          return {\r\n              ...prev, \r\n              [el.name] : 'Minimum value should be 0'\r\n          }\r\n      })\r\n      return false;\r\n    }\r\n    else {\r\n      setupcommingNftDataError((prev) => {\r\n        return {\r\n          ...prev,\r\n          [el.name]: null,\r\n        };\r\n      });\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const addSocialMediaField = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    if(validate_social_media()){\r\n      setSocialMediaData((prev)=>{\r\n        return [\r\n          ...prev,\r\n          {media:social_media, media_link:social_media_link}\r\n        ]\r\n      })\r\n      document.getElementById('social_media').value = \"\";\r\n      document.getElementById('social_media_link').value = \"\";\r\n    }\r\n  }\r\n  const deleteSocialMediaField = (index) => {\r\n    setSocialMediaData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  const validate_social_media = () => {\r\n    let social_media = document.getElementById('social_media').value;\r\n    let social_media_link = document.getElementById('social_media_link').value;\r\n    let [social_media_message, social_media_link_message] = [\"\", \"\"];\r\n    let flag = true;\r\n    if(social_media == \"\"){\r\n      flag = false\r\n      social_media_message = 'Field required';\r\n    }\r\n    if(social_media_link == \"\"){\r\n      flag = false\r\n      social_media_link_message = 'Field required';\r\n    }\r\n\r\n\r\n    setupcommingNftDataError({\r\n      social_media : social_media_message,\r\n      social_media_link: social_media_link_message\r\n    })\r\n    return flag\r\n  }\r\n\r\n  const saveNftImages = (e) => {\r\n    if(e.target.files && e.target.files.length > 0){\r\n      setuploadImagesData((prev) => {\r\n        return [\r\n          ...prev,\r\n          {\r\n            name: e.target.files[0].name,\r\n            file: e.target.files[0]\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n  const deleteNftImages = (index) => {\r\n    setuploadImagesData((prev)=>{\r\n      var data = prev.filter((item, i)=>{\r\n        return index !== i\r\n      })\r\n      return data\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    document.getElementById(\"upcoming_nft_image\").value = \"\";\r\n  }, [uploadImagesData])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-12 heading p-0\">\r\n          <h1>\r\n            {\" \"}\r\n            <span className=\"highlight\">Submit</span> Upcoming NFTs{\" \"}\r\n          </h1>\r\n        </div>\r\n        <div className=\"col-12 px-0\">\r\n          <div className=\"nft-form\">\r\n            <form\r\n              action=\"\"\r\n              method=\"post\"\r\n              id=\"submit-upcomming-nft-form\"\r\n              encType=\"multipart/form-data\"\r\n              onSubmit={nftUpcommingSubmitHandler}\r\n            >\r\n              <div className=\"row m-0\">\r\n                <div className=\"col-12 px-0\">\r\n                  <div className=\"box-modal\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12\">\r\n                        <div className=\"title\"><h3>About yourself</h3></div>\r\n                      </div>\r\n                      <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"first-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"text\"\r\n                                  name=\"project_name\"\r\n                                  id=\"project_name\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Project name\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.project_name}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"last-name form-group\">\r\n                                <input\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                  type=\"url\"\r\n                                  name=\"website\"\r\n                                  id=\"website\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Website\"\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.website}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          {/* <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <div className=\"form-group\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  name=\"socialmedia\"\r\n                                  id=\"socialmedia\"\r\n                                  className=\"form-control\"\r\n                                  placeholder=\"Social Media\"\r\n                                  onChange={saveNftData}\r\n                                  onBlur={(e) => validate(e.target)}\r\n                                />\r\n                                <div className=\"error-message\">{upcommingNftDataError.socialmedia}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div> */}\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <DatePicker\r\n                                name=\"release_date\"\r\n                                id=\"release_date\"\r\n                                className=\"form-control\"\r\n                                selected={startDate}\r\n                                onChange={(date) => {setstartDate(date)}}\r\n                                onBlur={(e) => validate(e.target)}\r\n                                minDate={new Date()}\r\n                                placeholderText=\"Launch date\"\r\n                                onChangeRaw={(e) => e.preventDefault()}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_date}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"release_time\"\r\n                                id=\"release_time\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Launch time\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => onblurLunchTime(e.target)}\r\n                                onFocus={onfocusLunchTime}\r\n                              />\r\n\r\n\r\n                              <div className=\"error-message\">{upcommingNftDataError.release_time}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <select \r\n                                name=\"timeZoneSelect\" \r\n                                id=\"timeZoneSelect\" \r\n                                className=\"form-control\" \r\n                                onChange={saveNftData} \r\n                                onBlur={(e) => validate(e.target)}\r\n                                defaultValue={\"\"}>\r\n                                <option disabled value=\"\">Select timezone</option>\r\n                                  {\r\n                                    timezoneSelectorOptions.map((item, index)=>{\r\n                                      return <option value={item.name} key={index}>{item.option}</option>\r\n                                    })\r\n                                  }\r\n                              </select>\r\n                              <div className=\"error-message\">{upcommingNftDataError.timeZoneSelect}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"network\"\r\n                                id=\"network\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Network\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.network}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                min={0}\r\n                                step={\"any\"}\r\n                                name=\"unit_price_eth\"\r\n                                id=\"unit_price_eth\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Unit price in ETH\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.unit_price_eth}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-md-6 col-12 pb-1\">\r\n                            <div className=\"form-group\">\r\n                              <input\r\n                                type=\"number\"\r\n                                name=\"max_number_collection\"\r\n                                id=\"max_number_collection\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Max number in the collection\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              />\r\n                              <div className=\"error-message\">{upcommingNftDataError.max_number_collection}</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n\r\n                              <div className='row'>\r\n                                <SocialMediaInput\r\n                                  addSocialMediaField={addSocialMediaField}\r\n                                  deleteSocialMediaField={deleteSocialMediaField}\r\n                                  socialMediaData={socialMediaData}\r\n                                  socialMediaDataError={socialMediaDataError}\r\n                                  setsocialMediaDataError={setsocialMediaDataError}\r\n                                  upcommingNftDataError={upcommingNftDataError}\r\n                                  />\r\n                              </div>\r\n                          </div>\r\n                          <div className=\"col-12 form-group border-dashed mb-3\"></div>\r\n                          <div className=\"col-12 pb-1\">\r\n                              <UploadImageInput\r\n                                saveNftImages={saveNftImages}\r\n                                deleteNftImages={deleteNftImages}\r\n                                uploadImagesData={uploadImagesData}\r\n                                setuploadImagesData={setuploadImagesData}\r\n                                validate={validate}\r\n                                upcommingNftDataError={upcommingNftDataError}\r\n                              />\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-12\">\r\n                            <div className=\"form-group\">\r\n                              <textarea\r\n                                name=\"briefdescription\"\r\n                                id=\"briefdescription\"\r\n                                cols=\"30\"\r\n                                rows=\"10\"\r\n                                className=\"form-control textarea\"\r\n                                placeholder=\"Description\"\r\n                                onChange={saveNftData}\r\n                                onBlur={(e) => validate(e.target)}\r\n                              ></textarea>\r\n                              <div className=\"error-message\">{upcommingNftDataError.briefdescription}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"form-btn nft-submit-btn\" id=\"submit-upcomming-nft-button\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n          thankyou ? <>\r\n              <div className=\"custom-modal d-block\">\r\n                  <div className=\"wrapper\">\r\n                      <div className=\"content\">\r\n                          <div className=\"title\">\r\n                              <h4>Thank you</h4>\r\n                          </div>\r\n                          <div className=\"icon\">\r\n                              <img src={assetUrl+\"images/checkmark-icon.png\"} alt=\"Checkmark Icon\" width=\"130px\" height=\"130px\" />\r\n                          </div>\r\n                          <div className=\"text\">\r\n                              <p>\r\n                                  We received your NFTs Information We will verify your NFTs Information and approve it. We will email you once it is approved.\r\n                              </p>\r\n                          </div>\r\n                          <div className=\"redirect\">\r\n                              <a href=\"#\" onClick={()=>{setThankyou(false)}}>Continue Browsing Website</a>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"overlay d-block\"></div>\r\n          </> : <></>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftForm;\r\n","import $ from 'jquery';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from \"../utils/axios\";\r\nimport { nftAssetUrl } from \"../utils/constant\";\r\nimport requests from \"../utils/Requests\";\r\n\r\nfunction UpcommingNftList() {\r\n  const [upcomming_nft, setupcomming_nft] = useState(false);\r\n  let upcoming_social_media = null;\r\n  useEffect(() => {\r\n    axios\r\n      .get(requests.upcomming_nft)\r\n      .then((response) => response.data)\r\n      .then((data) => {\r\n        setupcomming_nft(data.data);\r\n      })\r\n      .catch(function(error) {});\r\n  }, []);\r\n\r\n  // let upcoming_social_media = JSON.parse(data.socialmedia);\r\n  return (\r\n    <>\r\n      <section className=\"nft-group-section\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row custom-newnft-row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"new-nft\">\r\n                <div className=\"heading\">\r\n                  <h1>\r\n                    <span className=\"highlight\">New</span> NFTs\r\n                  </h1>\r\n                </div>\r\n                <div className=\"nft-table-wrapper d-block\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"nft-table table table-borderless text-left\" id=\"nft-list-table\">\r\n                      <thead id=\"nft-list-table\">\r\n                        <tr>\r\n                          <td>#</td>\r\n                          <td className=\"nft-detail-col\">Project name</td>\r\n                          <td>Network</td>\r\n                          <td className=\"nft-detail-column\">Launch date</td>\r\n                          <td></td>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {upcomming_nft ? (\r\n                          upcomming_nft.map(function(item, index) {\r\n                              return (\r\n                                <>\r\n                                  <tr className=\"border-0\" key={uuidv4()}>\r\n                                    <td>{index+1}</td>\r\n                                    <td>{item.project_name}</td>\r\n                                    <td>{item.network || 'NaN'}</td>\r\n                                    <td>\r\n                                      { item.release_date } { item.release_time }\r\n                                    </td>\r\n                                    <td><a className='highlight imp bold-14' onClick={()=>{$('#desc'+index).slideToggle()}}>Read more</a></td>\r\n                                  </tr>\r\n                                  <tr key={uuidv4()}>\r\n                                    <td colSpan={5} className=\"text-left py-0 px-2\">\r\n                                      <div id={'desc'+index} style={{display: 'none'}}>\r\n                                        <div className=\"social\">\r\n                                          <span className=\"highlight\"> Social media: </span>\r\n                                            {\r\n                                              (item.socialmedia) ?  \r\n                                                JSON.parse(item.socialmedia).map((item, index) => {\r\n                                                    return <a href={item.media_link} key={uuidv4()} target=\"_blank\" rel=\"noopener noreferrer\" className={item.media}><i className={\"fab fa-\"+item.media}></i></a>\r\n                                                })\r\n                                              :<></>\r\n                                            }\r\n                                            {/* <span className=\"font-weight-normal\"> {item.socialmedia} </span> */}\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Description: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.briefdescription} </span>\r\n                                        </div>\r\n                                        <div className=\"description\">\r\n                                          <span className=\"highlight\"> Unit price eth: </span>\r\n                                          <span className=\"font-weight-normal\"> {item.unit_price_eth || 'NaN'} </span>\r\n                                        </div>\r\n                                        <div className='nft-images'>\r\n                                              {\r\n                                                (item.images) ?\r\n                                                  <>\r\n                                                  <span className='highlight'>Images: </span>\r\n                                                    <div>\r\n                                                  {\r\n                                                    JSON.parse(item.images).map((item, index)=>{\r\n                                                      return <a href={nftAssetUrl+item} key={uuidv4()} target={\"_blank\"}>\r\n                                                              <img src={nftAssetUrl+item} alt=\"User profile image\" width=\"100px\" className='mr-2' />\r\n                                                          </a>\r\n                                                    })\r\n                                                  }\r\n                                                  </div>\r\n                                                  </>\r\n                                                  :<></>\r\n                                              }\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                  </tr>\r\n                                </>\r\n                              );\r\n                            })\r\n                        ) : (\r\n                            <tr key={uuidv4()}>\r\n                              <td colSpan={5}>\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                                <br />\r\n                                <div className='skeleton'>\r\n                                  <br /><br />\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                        )}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mobile-nft-list\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpcommingNftList;\r\n","import React from 'react'\r\nimport UpcommingNftForm from '../partials/UpcommingNftForm'\r\nimport UpcommingNftList from '../partials/UpcommingNftList'\r\n\r\nfunction UpcommingNft() {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <main className='main-spacing'>\r\n            <section className=\"submit-nft\">\r\n                <div className=\"nft-container\">\r\n                    <div className=\"container-lg\">\r\n                        <UpcommingNftForm />\r\n                        <UpcommingNftList />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpcommingNft\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from '../partials/Footer';\r\nimport Header from '../partials/Header';\r\nimport ContactUs from './ContactUs';\r\nimport Home from './Home';\r\nimport SubmitNft from './SubmitNft';\r\nimport UpcommingNft from './UpcommingNft';\r\n\r\nfunction Main() {\r\n\r\n    let location = useLocation();\r\n    let [myRoute, setMyRoute] = useState(null)\r\n    useEffect(()=>{\r\n        setMyRoute(location.pathname)\r\n    }, [location])\r\n\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header route={myRoute}/>\r\n                \r\n            <Route exact path=\"/submit-nft\">\r\n                <SubmitNft/>\r\n            </Route>\r\n            <Route exact path=\"/upcomming-nft\">\r\n                <UpcommingNft/>\r\n            </Route>\r\n            <Route exact path=\"/contact-us\">\r\n                <ContactUs/>\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n                <Home/>\r\n            </Route>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Footer from './Footer'\r\nimport Header from './Header'\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div className='body-wrapper'>\r\n            <Header />\r\n            <div className=\"admin-container\">\r\n                <div className=\"container-lg\">\r\n                    <div className=\"page-404-error text-center\">\r\n                        <div className=\"error\">\r\n                            <h1 className=\"display-1 font-weight-bold\">404</h1>\r\n                            <h2 className=\"peak text-uppercase\">Seems you are lost !</h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoMatch\r\n","const listNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_LIST_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listNft;\r\n","const trendingNft = (state = null, action) => {\r\n    switch (action.type) {\r\n        case \"UPDATE_TRENDING_NFT\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default trendingNft;\r\n","import { combineReducers } from \"redux\";\r\nimport listNft from \"./listNft\";\r\n// import defaultJobReducere from \"./defaultJob\";\r\n// import updateCounter from \"./updateCounter\";\r\nimport trendingNft from \"./trendingNft\";\r\nconst allReducres = combineReducers({\r\n    trendingNft: trendingNft,\r\n    listNft: listNft\r\n});\r\n\r\nexport default allReducres;\r\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore } from \"redux\";\nimport './App.css';\nimport Main from \"./pages/Main\";\nimport NoMatch from './partials/NoMatch';\nimport allReducres from \"./reducers\";\nconst store = createStore(\n  allReducres,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\nfunction App() {\n  \n\n\n  return (\n    <Provider store={store}>\n      \n      <Router>\n        {/* <Test/> */}\n        <Switch >\n          \n          \n          <Route exact path={[\"/\", \"/submit-nft\", \"/upcomming-nft\", \"/contact-us\"]}>\n            <Main/> \n          </Route>\n          <Route path=\"*\">\n              <NoMatch />\n          </Route>\n\n        </Switch >\n\n\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}